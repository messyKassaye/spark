{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\home\\\\CreateAccount.js\";\nimport React from 'react';\nimport { getData, setData } from '../TokenService';\nimport { showMainDialog } from '../authentication/commons/state/actions/dialogActions';\nimport { connect } from 'react-redux';\nimport CreateAccountAndLogin from './dialogs/CreateAccountAndLogin';\nimport AgreementDialog from './dialogs/AgreementDialog';\nimport history from './history/history';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport createAccountStyle from './styles/createAccountStyle';\nimport { AppBar, Button, Container, Divider, Grid, TextField, Toolbar, Typography } from '@material-ui/core';\nimport LogoComponent from '../authentication/commons/LogoComponent';\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\nimport gender from './gender';\nimport birthDates from './birthDate';\nimport { grey } from '@material-ui/core/colors';\nimport { uploadFile } from './state/actions/FileUploadAction';\nimport { Skeleton } from '@material-ui/lab';\nimport LoadingButton from '../authentication/commons/LoadingButton';\nimport axios from 'axios';\nimport { API_AUTH_URL } from '../constants/constants';\nimport { set } from '../TokenService';\nimport logo from '../../assets/logo.png';\n\nclass CreateAccount extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showDialog = component => {\n      this.props.showMainDialog({\n        show: true,\n        maxWidth: 'sm',\n        top: -20,\n        showTitle: false,\n        page: component,\n        title: `Spark`,\n        actions: {\n          on: false,\n          path: '',\n          id: ''\n        }\n      });\n    };\n\n    this.onFileChange = event => {\n      // Update the state \n      const file = event.target.files[0];\n      const formData = new FormData();\n      formData.append('file', file);\n      this.setState({\n        uploadingFile: true\n      });\n      this.props.uploadFile(formData);\n    };\n\n    this.onFileUpload = () => {\n      this.inputOpenFileRef.current.click();\n    };\n\n    this.genderSelection = gender => {\n      const {\n        formData\n      } = this.state;\n      formData['gender_id'] = gender.id;\n      this.setState(formData);\n    };\n\n    this.handleChange = event => {\n      const {\n        formData\n      } = this.state;\n      formData[event.target.name] = event.target.value;\n      this.setState(formData);\n    };\n\n    this.handleBirthDateChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n\n      if (name === 'MM' && value > 12) {\n        this.setState({\n          birthDateError: \"Month can't be greater than 12\"\n        });\n      } else if (name === 'DD' && value > 31) {\n        this.setState({\n          birthDateError: \"Birth date can't be greater than 31\"\n        });\n      } else {\n        const {\n          birthDateForm\n        } = this.state;\n        birthDateForm[event.target.name] = event.target.value;\n        this.setState(birthDateForm);\n      }\n    };\n\n    this.handleSubmit = event => {\n      this.setState({\n        submitted: true,\n        loading: true\n      });\n      const {\n        formData\n      } = this.state;\n      const {\n        birthDateForm\n      } = this.state;\n      formData['birth_date'] = `${birthDateForm.MM}/${birthDateForm.DD}/${birthDateForm.YY}`;\n      console.log(formData);\n      axios.post(`${API_AUTH_URL}signup`, formData).then(response => response.data).then(response => {\n        set(response.token);\n        history.push('/auth');\n        window.location.reload();\n      }).catch(onerror => {\n        if (!onerror.status) {\n          this.setState({\n            errorMessage: 'networkError'\n          });\n        } else {\n          let code = onerror.response.status;\n\n          if (code === 409) {\n            this.setState({\n              errorMessage: onerror.response.data.message\n            });\n          }\n\n          this.setState({\n            loading: false,\n            finished: true,\n            submitted: false\n          });\n        }\n      });\n    };\n\n    this.state = {\n      formData: {\n        name: '',\n        email: \"\",\n        password: '',\n        phone: '',\n        profile_pic_path: '',\n        gender_id: '',\n        birth_date: ''\n      },\n      birthDateForm: {\n        MM: '',\n        DD: \"\",\n        YY: \"\"\n      },\n      fileFormData: {\n        file: ''\n      },\n      birthDateError: '',\n      submitted: false,\n      loading: false,\n      finished: false,\n      uploadingFile: false,\n      uploadDone: false,\n      uploadStatus: false,\n      filePath: ''\n    };\n    this.inputOpenFileRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.showDialog( /*#__PURE__*/React.createElement(AgreementDialog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }));\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    const {\n      formData\n    } = this.state;\n    formData['profile_pic_path'] = nextProps.response.path;\n    this.setState({\n      formData,\n      uploadDone: true,\n      uploadStatus: nextProps.response.status,\n      filePath: nextProps.response.path\n    });\n  } // On file upload (click the upload button) \n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      formData\n    } = this.state;\n    const {\n      birthDateForm\n    } = this.state;\n    const {\n      loading\n    } = this.state;\n    const {\n      finished\n    } = this.state;\n    const setLoading = !finished && loading;\n    const isEnabled = formData.email.length > 0 && formData.name.length > 0 && formData.profile_pic_path.length > 0 && birthDateForm.DD.length > 0 && birthDateForm.MM.length > 0 && birthDateForm.YY.length > 0 && formData.phone.length > 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      style: {\n        backgroundColor: 'white'\n      },\n      elevation: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      maxWidth: 'lg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: 150,\n      height: 100,\n      src: logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 30\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.formContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ValidatorForm, {\n      className: classes.form,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: 'h4',\n      color: 'textSecondary',\n      className: classes.info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, \"Create account\"), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 8,\n      xs: 12,\n      sm: 12,\n      className: classes.grid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: 'outlined',\n      className: classes.text_input,\n      label: 'name',\n      onChange: this.handleChange,\n      name: \"name\",\n      type: \"text\",\n      value: this.state.formData.name,\n      validators: ['required'],\n      errorMessages: ['Please enter your name'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 4,\n      xs: 12,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.gender,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        marginBottom: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 33\n      }\n    }, \"Gender\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.genderInnerLayout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 33\n      }\n    }, gender.map(gender => /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.genderSelection(gender),\n      key: gender.id,\n      variant: 'outlined',\n      color: this.state.formData.gender_id === gender.id ? 'primary' : 'inherit',\n      style: {\n        textTransform: 'none',\n        marginRight: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 45\n      }\n    }, gender.name))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 8,\n      xs: 12,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: 'outlined',\n      className: classes.text_input,\n      label: 'email',\n      onChange: this.handleChange,\n      name: \"email\",\n      type: \"email\",\n      value: this.state.formData.email,\n      validators: ['required'],\n      errorMessages: ['Please enter your email'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 4,\n      xs: 12,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.birthDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        marginBottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 29\n      }\n    }, \"Birth date\"), /*#__PURE__*/React.createElement(Typography, {\n      color: 'secondary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 29\n      }\n    }, this.state.birthDateError), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.genderInnerLayout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      onChange: this.handleBirthDateChange,\n      style: {\n        marginRight: 15\n      },\n      name: 'DD',\n      value: this.state.birthDateForm.DD,\n      label: 'DD',\n      type: 'number',\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      onChange: this.handleBirthDateChange,\n      style: {\n        marginRight: 15\n      },\n      name: 'MM',\n      type: 'number',\n      value: this.state.birthDateForm.MM,\n      label: 'MM',\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      onChange: this.handleBirthDateChange,\n      style: {\n        marginRight: 15\n      },\n      name: \"YY\",\n      type: 'number',\n      value: this.state.birthDateForm.YY,\n      label: 'YY',\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 8,\n      xs: 12,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: 'outlined',\n      className: classes.text_input,\n      label: 'Phone',\n      onChange: this.handleChange,\n      name: \"phone\",\n      type: \"text\",\n      value: this.state.formData.phone,\n      validators: ['required'],\n      errorMessages: ['Please enter your email'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 8,\n      xs: 12,\n      sm: 12,\n      className: classes.grid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: 'outlined',\n      className: classes.text_input,\n      label: 'Password',\n      onChange: this.handleChange,\n      name: \"password\",\n      type: \"password\",\n      value: this.state.formData.password,\n      validators: ['required'],\n      errorMessages: ['Please enter your password'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 6,\n      xs: 12,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 25\n      }\n    }, this.state.uploadingFile ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 41\n      }\n    }, this.state.uploadDone ? /*#__PURE__*/React.createElement(\"img\", {\n      width: 150,\n      height: 100,\n      src: this.state.filePath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 57\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: 'row',\n        justifyContent: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      variant: 'rect',\n      height: 50,\n      width: 150,\n      style: {\n        backgroundColor: grey[500],\n        marginRight: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      color: 'textSecondary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 61\n      }\n    }, \"Working on it. please wait...\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.profile_pic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: 'textSecondary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 49\n      }\n    }, \"Profile photo\"), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: \"none\"\n      },\n      onChange: this.onFileChange,\n      type: \"file\",\n      ref: this.inputOpenFileRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onFileUpload,\n      variant: \"outlined\",\n      style: {\n        color: grey[600]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 49\n      }\n    }, \"Upload from computer\")))), /*#__PURE__*/React.createElement(LoadingButton, {\n      className: classes.create_btn,\n      color: \"primary\",\n      variant: \"outlined\",\n      type: \"submit\",\n      disabled: !isEnabled || this.state.submitted,\n      loading: setLoading,\n      text: 'CREATE ACCOUNT',\n      done: finished,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 21\n      }\n    }, 'CREATE ACCOUNT'))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  response: state.homeReducer.fileUploadReducer.response\n});\n\nexport default withStyles(createAccountStyle)(connect(mapStateToProps, {\n  showMainDialog,\n  uploadFile\n})(CreateAccount));","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/home/CreateAccount.js"],"names":["React","getData","setData","showMainDialog","connect","CreateAccountAndLogin","AgreementDialog","history","withStyles","createAccountStyle","AppBar","Button","Container","Divider","Grid","TextField","Toolbar","Typography","LogoComponent","TextValidator","ValidatorForm","gender","birthDates","grey","uploadFile","Skeleton","LoadingButton","axios","API_AUTH_URL","set","logo","CreateAccount","Component","constructor","props","showDialog","component","show","maxWidth","top","showTitle","page","title","actions","on","path","id","onFileChange","event","file","target","files","formData","FormData","append","setState","uploadingFile","onFileUpload","inputOpenFileRef","current","click","genderSelection","state","handleChange","name","value","handleBirthDateChange","birthDateError","birthDateForm","handleSubmit","submitted","loading","MM","DD","YY","console","log","post","then","response","data","token","push","window","location","reload","catch","onerror","status","errorMessage","code","message","finished","email","password","phone","profile_pic_path","gender_id","birth_date","fileFormData","uploadDone","uploadStatus","filePath","createRef","componentDidMount","componentWillReceiveProps","nextProps","nextContext","render","classes","setLoading","isEnabled","length","container","backgroundColor","formContainer","form","info","grid","text_input","marginBottom","genderInnerLayout","map","textTransform","marginRight","birthDate","display","flexDirection","justifyContent","profile_pic","color","create_btn","mapStateToProps","homeReducer","fileUploadReducer"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { getData, setData } from '../TokenService';\r\nimport {showMainDialog} from '../authentication/commons/state/actions/dialogActions'\r\nimport {connect} from 'react-redux'\r\nimport CreateAccountAndLogin from './dialogs/CreateAccountAndLogin';\r\nimport AgreementDialog from './dialogs/AgreementDialog';\r\nimport history from './history/history'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport createAccountStyle from './styles/createAccountStyle'\r\nimport { AppBar, Button, Container, Divider, Grid, TextField, Toolbar, Typography } from '@material-ui/core';\r\nimport LogoComponent from '../authentication/commons/LogoComponent';\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\nimport gender from './gender'\r\nimport birthDates from './birthDate'\r\nimport { grey } from '@material-ui/core/colors';\r\nimport {uploadFile} from './state/actions/FileUploadAction'\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport LoadingButton from '../authentication/commons/LoadingButton';\r\nimport axios from 'axios'\r\nimport { API_AUTH_URL } from '../constants/constants';\r\nimport { set } from '../TokenService';\r\nimport logo from '../../assets/logo.png'\r\n\r\nclass CreateAccount extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            formData:{\r\n                name:'',\r\n                email:\"\",\r\n                password:'',\r\n                phone:'',\r\n                profile_pic_path:'',\r\n                gender_id:'',\r\n                birth_date:'',\r\n            },\r\n\r\n            birthDateForm:{\r\n                MM:'',\r\n                DD:\"\",\r\n                YY:\"\"\r\n            },\r\n            fileFormData:{\r\n                file:''\r\n            },\r\n            birthDateError:'',\r\n            submitted: false,\r\n            loading: false,\r\n            finished: false,\r\n            uploadingFile:false,\r\n            uploadDone:false,\r\n            uploadStatus:false,\r\n            filePath:''\r\n        }\r\n        this.inputOpenFileRef = React.createRef()\r\n        \r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.showDialog(<AgreementDialog/>)\r\n    }\r\n\r\n \r\n    showDialog = (component)=>{\r\n\r\n        this.props.showMainDialog({\r\n            show:true,\r\n            maxWidth:'sm',\r\n            top:-20,\r\n            showTitle:false,\r\n            page:component,\r\n            title:`Spark`,\r\n            actions:{\r\n                on:false,\r\n                path:'',\r\n                id:''\r\n            }\r\n        })\r\n    }\r\n\r\n    onFileChange = event => { \r\n     \r\n        // Update the state \r\n        const file = event.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('file', file);\r\n        this.setState({uploadingFile:true})\r\n        this.props.uploadFile(formData)\r\n        \r\n      }\r\n      \r\n      componentWillReceiveProps(nextProps, nextContext) {\r\n          const {formData} = this.state\r\n          formData['profile_pic_path'] =nextProps.response.path;\r\n        this.setState({\r\n            formData,\r\n            uploadDone:true,\r\n            uploadStatus:nextProps.response.status,\r\n            filePath:nextProps.response.path\r\n        })\r\n    }\r\n\r\n    // On file upload (click the upload button) \r\n    onFileUpload = () => { \r\n        this.inputOpenFileRef.current.click()\r\n      }\r\n\r\n      genderSelection = (gender)=>{\r\n          const {formData} = this.state\r\n          formData['gender_id'] = gender.id\r\n          this.setState(formData)\r\n      }\r\n\r\n      handleChange = (event)=>{\r\n        const {formData} = this.state\r\n        formData[event.target.name] = event.target.value\r\n        this.setState(formData)\r\n    }\r\n\r\n    handleBirthDateChange = (event)=>{\r\n        const name = event.target.name;\r\n        const value = event.target.value\r\n        if(name==='MM'&&value>12){\r\n            this.setState({\r\n                birthDateError:\"Month can't be greater than 12\"\r\n            })\r\n        }else if(name==='DD'&&value>31){\r\n            this.setState({\r\n                birthDateError:\"Birth date can't be greater than 31\"\r\n            })\r\n        }else{\r\n\r\n            const {birthDateForm} = this.state\r\n            birthDateForm[event.target.name] = event.target.value\r\n            this.setState(birthDateForm)\r\n        }\r\n        \r\n    }\r\n\r\n    handleSubmit = event=>{\r\n        this.setState({\r\n            submitted: true,\r\n            loading: true\r\n        })\r\n\r\n        const {formData} = this.state\r\n        const {birthDateForm} = this.state\r\n\r\n        formData['birth_date'] = `${birthDateForm.MM}/${birthDateForm.DD}/${birthDateForm.YY}`\r\n        console.log(formData)\r\n\r\n        axios.post(`${API_AUTH_URL}signup`,formData)\r\n        .then(response=>response.data)\r\n        .then((response)=>{\r\n               set(response.token)\r\n               history.push('/auth')\r\n               window.location.reload()\r\n        })\r\n        .catch(onerror=>{\r\n            if(!onerror.status){\r\n                this.setState({errorMessage:'networkError'})\r\n            }else {\r\n                let code = onerror.response.status\r\n                if(code===409){\r\n                    this.setState({errorMessage:onerror.response.data.message})\r\n                }\r\n                this.setState({\r\n                    loading:false,\r\n                    finished:true,\r\n                    submitted:false\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n      \r\n    render() {\r\n        const {classes} =this.props\r\n\r\n        const {formData} = this.state\r\n        const {birthDateForm} = this.state\r\n        const {loading} = this.state;\r\n        const {finished} = this.state\r\n        const setLoading = !finished && loading;\r\n        const isEnabled = formData.email.length > 0 && formData.name.length > 0\r\n            &&formData.profile_pic_path.length>0&&birthDateForm.DD.length>0\r\n            &&birthDateForm.MM.length>0&&birthDateForm.YY.length>0&&formData.phone.length>0\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                {/* create account app bar  */}\r\n                <AppBar style={{backgroundColor:'white'}} elevation={0}>\r\n                    <Toolbar>\r\n                        <Container maxWidth={'lg'}>\r\n                             <img   width={150} height={100} src={logo}/> \r\n                        </Container>\r\n                    </Toolbar>\r\n                    <Divider/>\r\n                </AppBar>\r\n\r\n                {/* create account form container */}\r\n                <div className={classes.formContainer}>\r\n                <ValidatorForm className={classes.form} onSubmit={this.handleSubmit}>\r\n\r\n                    <Typography \r\n                    variant={'h4'} \r\n                    color={'textSecondary'} \r\n                    className={classes.info}>\r\n                        Create account\r\n                    </Typography>\r\n\r\n                    <Grid container spacing={2}>\r\n\r\n                        {/*name input and gender  layout */}\r\n                        <Grid item md={8} xs={12} sm={12} className={classes.grid}>\r\n                            <TextField\r\n                            variant={'outlined'}\r\n                            className={classes.text_input}\r\n                            label={'name'}\r\n                            onChange={this.handleChange}\r\n                            name=\"name\"\r\n                            type='text'\r\n                            value={this.state.formData.name}\r\n                            validators={['required']}\r\n                            errorMessages={['Please enter your name']}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item md={4} xs={12} sm={12}>\r\n                                <div className={classes.gender}>\r\n                                <Typography style={{marginBottom:10}}>\r\n                                    Gender\r\n                                </Typography>\r\n                                <div className={classes.genderInnerLayout}>\r\n                                    {\r\n                                        gender.map(gender=>(\r\n                                            <Button\r\n                                            onClick={()=>this.genderSelection(gender)}\r\n                                            key={gender.id}\r\n                                            variant={'outlined'}\r\n                                            color={\r\n                                                this.state.formData.gender_id===gender.id?'primary':'inherit'\r\n                                            }\r\n                                            style={{textTransform:'none',marginRight:15}}>\r\n                                                {gender.name}\r\n                                            </Button>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                                </div>\r\n                        </Grid>\r\n                        {/*end of name input and gender  layout */}\r\n\r\n\r\n                        {/*name input and gender  layout */}\r\n                        \r\n\r\n\r\n                        {/*email and birth date layour starts here */}\r\n                        <Grid item md={8} xs={12} sm={12}>\r\n                            <TextField\r\n                                variant={'outlined'}\r\n                                className={classes.text_input}\r\n                                label={'email'}\r\n                                onChange={this.handleChange}\r\n                                name=\"email\"\r\n                                type='email'\r\n                                value={this.state.formData.email}\r\n                                validators={['required']}\r\n                                errorMessages={['Please enter your email']}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item md={4} xs={12} sm={12}>\r\n                        <div className={classes.birthDate}>\r\n                            <Typography style={{marginBottom:5}}>\r\n                                Birth date\r\n                            </Typography>\r\n                            <Typography color={'secondary'}>\r\n                                {this.state.birthDateError}\r\n                            </Typography>\r\n                            <div className={classes.genderInnerLayout}>\r\n                                <TextField\r\n                                    onChange={this.handleBirthDateChange}\r\n                                    style={{marginRight:15}}\r\n                                    name={'DD'}\r\n                                    value={this.state.birthDateForm.DD}\r\n                                    label={'DD'}\r\n                                    type={'number'}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    onChange={this.handleBirthDateChange}\r\n                                    style={{marginRight:15}}\r\n                                    name={'MM'}\r\n                                    type={'number'}\r\n                                    value={this.state.birthDateForm.MM}\r\n                                    label={'MM'}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                                <TextField\r\n                                    onChange={this.handleBirthDateChange}\r\n                                    style={{marginRight:15}}\r\n                                    name={\"YY\"}\r\n                                    type={'number'}\r\n                                    value={this.state.birthDateForm.YY}\r\n                                    label={'YY'}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                             \r\n                            </div>\r\n                        </div>\r\n                        </Grid>\r\n                        {/*end of email and birth date input layout */}\r\n\r\n                        {/*phone input */}\r\n                        <Grid item md={8} xs={12} sm={12}>\r\n                        <TextField\r\n                                variant={'outlined'}\r\n                                className={classes.text_input}\r\n                                label={'Phone'}\r\n                                onChange={this.handleChange}\r\n                                name=\"phone\"\r\n                                type='text'\r\n                                value={this.state.formData.phone}\r\n                                validators={['required']}\r\n                                errorMessages={['Please enter your email']}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item md={8} xs={12} sm={12} className={classes.grid}>\r\n                            <TextField\r\n                            variant={'outlined'}\r\n                            className={classes.text_input}\r\n                            label={'Password'}\r\n                            onChange={this.handleChange}\r\n                            name=\"password\"\r\n                            type='password'\r\n                            value={this.state.formData.password}\r\n                            validators={['required']}\r\n                            errorMessages={['Please enter your password']}\r\n\r\n                            />\r\n                        </Grid>\r\n\r\n                        {/* profile picture selector start here */}\r\n                        <Grid item md={6} xs={12} sm={12}>\r\n                            {\r\n                                this.state.uploadingFile\r\n                                ?\r\n                                    (\r\n                                        <div>\r\n                                            {\r\n                                                this.state.uploadDone\r\n                                                ?\r\n                                                    (\r\n                                                        <img\r\n                                                        width={150}\r\n                                                        height={100}\r\n                                                        src={this.state.filePath}/>\r\n                                                    )\r\n                                                :\r\n                                                    (\r\n                                                        <div style={{display:\"flex\",\r\n                                                        flexDirection:'row',\r\n                                                        justifyContent:'flex-start'}}>\r\n                                                            <Skeleton\r\n                                                            variant={'rect'}\r\n                                                            height={50}\r\n                                                            width={150}\r\n                                                            style={{backgroundColor:grey[500],marginRight:20}}\r\n                                                            />\r\n                                                            <Typography color={'textSecondary'}>\r\n                                                                Working on it. please wait...\r\n                                                            </Typography>\r\n                                                        </div>\r\n                                                    )\r\n                                            }\r\n                                        </div>\r\n                                    )\r\n                                :\r\n                                    (\r\n                                        <div className={classes.profile_pic}>\r\n                                                <Typography  color={'textSecondary'}>\r\n                                                    Profile photo\r\n                                                </Typography>\r\n                                                <input \r\n                                                style={{display:\"none\"}}\r\n                                                onChange={this.onFileChange}\r\n                                                type=\"file\" \r\n                                                ref={this.inputOpenFileRef}/> \r\n\r\n                                                <Button\r\n                                                    onClick={this.onFileUpload}\r\n                                                    variant=\"outlined\"\r\n                                                    style={{color:grey[600]}}      \r\n                                                >\r\n                                                    Upload from computer\r\n                                                </Button>\r\n                                            </div>\r\n                                    )\r\n                            }\r\n                        </Grid>\r\n                        {/* end of profile picture selector*/}\r\n                    </Grid>\r\n\r\n                    <LoadingButton\r\n                    className={classes.create_btn}\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    type=\"submit\"\r\n                    disabled={!isEnabled || this.state.submitted}\r\n                    loading={setLoading}\r\n                    text={'CREATE ACCOUNT'}\r\n                    done={finished}\r\n                    >\r\n                    {\r\n                        'CREATE ACCOUNT'\r\n                    }\r\n                    </LoadingButton>\r\n                    \r\n                </ValidatorForm>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    response:state.homeReducer.fileUploadReducer.response\r\n})\r\n\r\nexport default withStyles(createAccountStyle)(connect(mapStateToProps,{showMainDialog,uploadFile})(CreateAccount))"]},"metadata":{},"sourceType":"module"}