{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\users\\\\widgets\\\\Chats.js\";\nimport React from 'react';\nimport Pusher from 'pusher-js';\nimport { CardContent, IconButton, Input, Typography } from '@material-ui/core';\nimport RightMessage from './RightMessage';\nimport LeftMessage from './LeftMessage';\nimport { Send } from '@material-ui/icons';\n\nclass Chats extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.scrollToTop();\n      const {\n        chats\n      } = this.state;\n      const currentMessage = {\n        sender: this.props.user.attribute.id,\n        receiver: this.props.chatUser.attribute.id,\n        message: this.state.formData.message\n      };\n      chats.push(currentMessage);\n      const {\n        formData\n      } = this.state;\n      formData['message'] = '';\n      this.setState({\n        chats,\n        formData\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        formData\n      } = this.state;\n      formData[event.target.name] = event.target.value;\n      this.setState(formData);\n    };\n\n    this.scrollToTop = () => {\n      this.container.scrollTop += 500;\n    };\n\n    this.sumId = (id1, id2) => {\n      return Number(id1) + Number(id2);\n    };\n\n    this.showData = data => {\n      const {\n        chats\n      } = this.state;\n      chats.push(data);\n      this.setState(chats);\n    };\n\n    this.state = {\n      chats: [],\n      scrollTop: 2,\n      formData: {\n        'sender': '',\n        'message': '',\n        'receiver': ''\n      }\n    };\n    this.inputRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.scrollToTop();\n    const {\n      chats\n    } = this.state;\n    chats.push(...this.props.chats);\n    this.setState(chats);\n    let PUSHER_APP_KEY = \"52d240141d3de6310e4e\";\n    let pusher = new Pusher(PUSHER_APP_KEY, {\n      cluster: 'ap2',\n      forceTLS: true\n    });\n    let channel = pusher.subscribe(`channel-${this.sumId(this.props.user.attribute.id, this.props.chatUser.attribute.id)}`);\n    channel.bind(`broadcast-${this.sumId(this.props.user.attribute.id, this.props.chatUser.attribute.id)}`, data => {\n      this.showData(data);\n      console.log(`message:${data.id}`);\n    });\n  }\n\n  componentDidUpdate() {\n    this.scrollToTop();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '80vh',\n        overflowY: 'scroll'\n      },\n      ref: el => this.container = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, this.state.chats.map(chat => {\n      return chat.sender === this.props.user.attribute.id ? /*#__PURE__*/React.createElement(RightMessage, {\n        chat: chat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 34\n        }\n      }) : /*#__PURE__*/React.createElement(LeftMessage, {\n        chat: chat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 34\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      ref: this.inputRef,\n      style: {\n        width: '90%'\n      },\n      onChange: this.handleChange,\n      name: 'message',\n      value: this.state.formData.message,\n      placeholder: 'Write your message...',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleClick,\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Send, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Chats;","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/users/widgets/Chats.js"],"names":["React","Pusher","CardContent","IconButton","Input","Typography","RightMessage","LeftMessage","Send","Chats","Component","constructor","props","handleClick","scrollToTop","chats","state","currentMessage","sender","user","attribute","id","receiver","chatUser","message","formData","push","setState","handleChange","event","target","name","value","container","scrollTop","sumId","id1","id2","Number","showData","data","inputRef","createRef","componentDidMount","PUSHER_APP_KEY","pusher","cluster","forceTLS","channel","subscribe","bind","console","log","componentDidUpdate","render","height","overflowY","el","map","chat","display","flexDirection","width"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Pusher from 'pusher-js'\r\nimport { CardContent, IconButton, Input, Typography } from '@material-ui/core';\r\nimport RightMessage from './RightMessage';\r\nimport LeftMessage from './LeftMessage';\r\nimport { Send } from '@material-ui/icons';\r\n\r\nclass Chats extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chats:[],\r\n            scrollTop:2,\r\n            formData:{\r\n                'sender':'',\r\n                'message':'',\r\n                'receiver':''\r\n            }\r\n        }\r\n\r\n        this.inputRef = React.createRef()\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        this.scrollToTop()\r\n        const {chats} = this.state\r\n        chats.push(...this.props.chats)\r\n        this.setState(chats)\r\n        \r\n        let PUSHER_APP_KEY = \"52d240141d3de6310e4e\"\r\n        let pusher = new Pusher(PUSHER_APP_KEY, {\r\n        cluster: 'ap2',\r\n        forceTLS: true\r\n        });\r\n        \r\n        let channel = pusher.subscribe(`channel-${this.sumId(this.props.user.attribute.id,this.props.chatUser.attribute.id)}`);\r\n        channel.bind(`broadcast-${this.sumId(this.props.user.attribute.id,this.props.chatUser.attribute.id)}`,(data)=>{\r\n        this.showData(data)\r\n        console.log(`message:${data.id}`)\r\n\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.scrollToTop()\r\n    }\r\n\r\n    handleClick = ()=>{\r\n        this.scrollToTop()\r\n\r\n        const {chats} = this.state\r\n        const currentMessage = {\r\n            sender: this.props.user.attribute.id,\r\n            receiver: this.props.chatUser.attribute.id,\r\n            message:this.state.formData.message\r\n        }\r\n        chats.push(currentMessage)\r\n\r\n        const {formData} = this.state\r\n        formData['message'] = ''\r\n        this.setState({chats,formData})\r\n\r\n    }\r\n\r\n    handleChange = event=>{\r\n        const{formData} = this.state\r\n        formData[event.target.name] = event.target.value\r\n        this.setState(formData)\r\n    }\r\n\r\n    scrollToTop = ()=>{\r\n        this.container.scrollTop +=500;\r\n    }\r\n    sumId = (id1,id2)=>{\r\n        return Number(id1)+Number(id2);\r\n    }\r\n\r\n    showData = (data)=>{\r\n        const {chats} = this.state\r\n        chats.push(data)\r\n        this.setState(chats)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CardContent>\r\n                <div style={{height:'80vh',overflowY:'scroll'}} ref={ el => this.container = el}>\r\n                {\r\n                    this.state.chats.map(chat=>{\r\n                        return chat.sender===this.props.user.attribute.id\r\n                        ?\r\n                            (\r\n                                 <RightMessage chat={chat}/>\r\n                            )\r\n                        :\r\n                            (\r\n                                 <LeftMessage chat={chat}/>\r\n                            )\r\n                    })\r\n                }\r\n                </div>\r\n                <div style={{display:'flex',flexDirection:'row'}}>\r\n                    <Input\r\n                    ref={this.inputRef}\r\n                    style={{width:'90%'}}\r\n                    onChange={this.handleChange}\r\n                    name={'message'}\r\n                    value={this.state.formData.message}\r\n                    placeholder={'Write your message...'}\r\n                    />\r\n                    <IconButton onClick={this.handleClick} color={'primary'}>\r\n                        <Send/>\r\n                    </IconButton>\r\n                </div>\r\n            </CardContent>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chats"]},"metadata":{},"sourceType":"module"}