{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\commons\\\\LoadingButton.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Check from '@material-ui/icons/Check';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\n\nconst LoadingButton = props => {\n  const {\n    loading,\n    done,\n    text,\n    ...other\n  } = props;\n\n  if (done) {\n    return /*#__PURE__*/React.createElement(Button, Object.assign({}, other, {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Check, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }));\n  } else if (loading) {\n    return /*#__PURE__*/React.createElement(Button, Object.assign({}, other, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }), text, \" \", /*#__PURE__*/React.createElement(CircularProgress, {\n      style: {\n        height: 20,\n        width: 20,\n        marginLeft: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(Button, Object.assign({}, other, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }), text, \"  \", /*#__PURE__*/React.createElement(ChevronRight, {\n      style: {\n        marginLeft: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }));\n  }\n};\n\nLoadingButton.defaultProps = {\n  loading: false,\n  done: false\n};\nLoadingButton.propTypes = {\n  loading: PropTypes.bool,\n  done: PropTypes.bool\n};\nexport default LoadingButton;","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/commons/LoadingButton.js"],"names":["React","PropTypes","Button","CircularProgress","Check","ChevronRight","LoadingButton","props","loading","done","text","other","height","width","marginLeft","defaultProps","propTypes","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAgBC,IAAAA,IAAhB;AAAqB,OAAGC;AAAxB,MAAkCJ,KAAxC;;AAEA,MAAIE,IAAJ,EAAU;AACN,wBACI,oBAAC,MAAD,oBAAaE,KAAb;AAAoB,MAAA,QAAQ,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH,GAND,MAOK,IAAIH,OAAJ,EAAa;AACd,wBACI,oBAAC,MAAD,oBAAaG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACMD,IADN,oBACY,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAACE,QAAAA,MAAM,EAAC,EAAR;AAAWC,QAAAA,KAAK,EAAC,EAAjB;AAAoBC,QAAAA,UAAU,EAAC;AAA/B,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ,CADJ;AAKH,GANI,MAME;AACH,wBACI,oBAAC,MAAD,oBAAaH,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACKD,IADL,qBACY,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAACI,QAAAA,UAAU,EAAC;AAAZ,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ,CADJ;AAKH;AACJ,CAvBD;;AAyBAR,aAAa,CAACS,YAAd,GAA6B;AACzBP,EAAAA,OAAO,EAAE,KADgB;AAEzBC,EAAAA,IAAI,EAAE;AAFmB,CAA7B;AAKAH,aAAa,CAACU,SAAd,GAA0B;AACtBR,EAAAA,OAAO,EAAEP,SAAS,CAACgB,IADG;AAEtBR,EAAAA,IAAI,EAAER,SAAS,CAACgB;AAFM,CAA1B;AAKA,eAAeX,aAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight'\r\n\r\nconst LoadingButton = (props) => {\r\n    const { loading, done,text,...other } = props;\r\n\r\n    if (done) {\r\n        return (\r\n            <Button  {...other} disabled>\r\n                <Check />\r\n            </Button>\r\n        );\r\n    }\r\n    else if (loading) {\r\n        return (\r\n            <Button  {...other}>\r\n                 {text} <CircularProgress style={{height:20,width:20,marginLeft:5}}/>\r\n            </Button>\r\n        );\r\n    } else {\r\n        return (\r\n            <Button  {...other}>\r\n                {text}  <ChevronRight style={{marginLeft:5}}/>\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nLoadingButton.defaultProps = {\r\n    loading: false,\r\n    done: false,\r\n};\r\n\r\nLoadingButton.propTypes = {\r\n    loading: PropTypes.bool,\r\n    done: PropTypes.bool,\r\n};\r\n\r\nexport default LoadingButton;"]},"metadata":{},"sourceType":"module"}