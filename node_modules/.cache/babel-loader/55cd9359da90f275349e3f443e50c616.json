{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\users\\\\dialogs\\\\EditInfo.js\";\nimport { TextField, Typography } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\nimport { Skeleton } from '@material-ui/lab';\nimport React from 'react';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport { connect } from 'react-redux';\nimport LoadingButton from '../../commons/LoadingButton';\nimport { me } from '../../state/actions/usersActions';\nimport { storeUtitlity } from '../../state/actions/userUtilityAction';\nimport { showMainDialog } from '../../commons/state/actions/dialogActions';\n\nclass EditInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        formData\n      } = this.state;\n      formData[event.target.name] = event.target.value;\n      this.setState(formData);\n    };\n\n    this.handleSubmit = event => {\n      this.setState({\n        submitted: true,\n        loading: true\n      });\n      const {\n        formData\n      } = this.state;\n      this.props.storeUtitlity(formData);\n    };\n\n    this.state = {\n      formData: {\n        about: '',\n        job_title: '',\n        company: '',\n        school: ''\n      },\n      submitted: false,\n      loading: false,\n      finished: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.me();\n    console.log(`${this.props.user.relations.utilities.about}`);\n    const {\n      formData\n    } = this.state;\n    const utility = this.props.user.relations.utilities;\n    formData['about'] = this.props.user.relations.utilities.about;\n    formData['company'] = utility.company;\n    formData['job_title'] = utility.job_title;\n    formData['school'] = utility.school;\n    this.setState(formData);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.response.status) {\n      this.setState({\n        loading: false,\n        finished: false,\n        submitted: false\n      });\n      setTimeout(() => {\n        this.props.showMainDialog({\n          'show': false,\n          'page': null,\n          'title': '',\n          actions: {\n            on: false,\n            path: '',\n            id: ''\n          }\n        });\n      }, 2000);\n    }\n  }\n\n  render() {\n    const {\n      formData\n    } = this.state;\n    const {\n      loading\n    } = this.state;\n    const {\n      finished\n    } = this.state;\n    const setLoading = !finished && loading;\n    const isEnabled = formData.about.length > 0 && formData.job_title.length > 0 && formData.company.length > 0 && formData.school.length > 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(Skeleton, {\n      variant: 'rect',\n      width: '100%',\n      height: 150,\n      style: {\n        backgroundColor: grey[500]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(ValidatorForm, {\n      onSubmit: this.handleSubmit,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, this.props.response.message), /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        marginBottom: 25\n      },\n      variant: 'outlined',\n      label: 'About me',\n      onChange: this.handleChange,\n      name: \"about\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        marginBottom: 25\n      },\n      variant: 'outlined',\n      label: 'Job title',\n      onChange: this.handleChange,\n      name: \"job_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        marginBottom: 25\n      },\n      variant: 'outlined',\n      label: 'Company',\n      onChange: this.handleChange,\n      name: \"company\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      variant: 'outlined',\n      label: 'School',\n      onChange: this.handleChange,\n      name: \"school\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(LoadingButton, {\n      style: {\n        marginTop: 50,\n        padding: 10\n      },\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      disabled: !isEnabled || this.state.submitted,\n      loading: setLoading,\n      text: 'Edit info',\n      done: finished,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }, 'Edit info')));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.userData.user,\n  loading: state.userData.loading,\n  response: state.authReducer.utilityReducer.response\n});\n\nexport default connect(mapStateToProps, {\n  me,\n  storeUtitlity,\n  showMainDialog\n})(EditInfo);","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/users/dialogs/EditInfo.js"],"names":["TextField","Typography","grey","Skeleton","React","ValidatorForm","connect","LoadingButton","me","storeUtitlity","showMainDialog","EditInfo","Component","constructor","props","handleChange","event","formData","state","target","name","value","setState","handleSubmit","submitted","loading","about","job_title","company","school","finished","componentDidMount","console","log","user","relations","utilities","utility","componentWillReceiveProps","nextProps","nextContext","response","status","setTimeout","actions","on","path","id","render","setLoading","isEnabled","length","backgroundColor","display","flexDirection","padding","message","marginBottom","marginTop","mapStateToProps","userData","authReducer","utilityReducer"],"mappings":"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","sourcesContent":["import { TextField, Typography } from '@material-ui/core'\r\nimport { grey } from '@material-ui/core/colors'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport React from 'react'\r\nimport { ValidatorForm } from 'react-material-ui-form-validator'\r\nimport {connect} from 'react-redux'\r\nimport LoadingButton from '../../commons/LoadingButton'\r\nimport {me} from '../../state/actions/usersActions'\r\nimport {storeUtitlity} from '../../state/actions/userUtilityAction'\r\nimport {showMainDialog} from '../../commons/state/actions/dialogActions'\r\nclass EditInfo extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formData:{\r\n                about:'',\r\n                job_title:'',\r\n                company:'',\r\n                school:''\r\n            },\r\n            submitted: false,\r\n            loading: false,\r\n            finished: false,\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.props.me()\r\n        console.log(`${this.props.user.relations.utilities.about}`)\r\n        const {formData} = this.state\r\n            const utility = this.props.user.relations.utilities\r\n            formData['about'] = this.props.user.relations.utilities.about\r\n            formData['company'] = utility.company\r\n            formData['job_title'] = utility.job_title\r\n            formData['school'] = utility.school\r\n            this.setState(formData)\r\n    }\r\n    \r\n\r\n    handleChange = (event)=>{\r\n        const {formData} = this.state\r\n        formData[event.target.name] = event.target.value\r\n        this.setState(formData)\r\n    }\r\n\r\n    handleSubmit = (event)=>{\r\n        this.setState({\r\n            submitted: true,\r\n            loading: true\r\n        })\r\n\r\n        const {formData} = this.state\r\n        this.props.storeUtitlity(formData)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if (nextProps.response.status) {\r\n            this.setState({\r\n                loading: false,\r\n                finished: false,\r\n                submitted: false,\r\n            })\r\n          setTimeout(()=>{\r\n              this.props.showMainDialog({'show':false,'page':null,'title':'',actions:{on:false,path:'',id:''}})\r\n          },2000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        \r\n        const {formData} = this.state\r\n        const {loading} = this.state;\r\n        const {finished} = this.state\r\n        const setLoading = !finished && loading;\r\n        const isEnabled = formData.about.length > 0 && formData.job_title.length > 0\r\n            &&formData.company.length>0&&formData.school.length>0\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.loading\r\n                    ?\r\n                        (\r\n                            <Skeleton\r\n                             variant={'rect'}\r\n                             width={'100%'}\r\n                             height={150}\r\n                             style={{backgroundColor:grey[500]}}\r\n                            />\r\n                        )\r\n                    :\r\n                        (\r\n                            <ValidatorForm \r\n                            onSubmit={this.handleSubmit}\r\n                            style={{display:'flex',flexDirection:'column',padding:10}}>\r\n                                <Typography color={'primary'}>\r\n                                    {this.props.response.message}\r\n                                </Typography>\r\n                                \r\n                                <TextField\r\n                                 style={{marginBottom:25}}\r\n                                 variant={'outlined'}\r\n                                 label={'About me'}\r\n                                 onChange={this.handleChange}\r\n                                 name=\"about\"\r\n                                />\r\n\r\n                                <TextField\r\n                                 style={{marginBottom:25}}\r\n                                 variant={'outlined'}\r\n                                 label={'Job title'}\r\n                                 onChange={this.handleChange}\r\n                                 name=\"job_title\"\r\n                                />\r\n\r\n                                <TextField\r\n                                 style={{marginBottom:25}}\r\n                                 variant={'outlined'}\r\n                                 label={'Company'}\r\n                                 onChange={this.handleChange}\r\n                                 name=\"company\"\r\n                                />\r\n                                <TextField\r\n                                 variant={'outlined'}\r\n                                 label={'School'}\r\n                                 onChange={this.handleChange}\r\n                                 name=\"school\"\r\n                                />\r\n\r\n                                <LoadingButton\r\n                                style={{marginTop:50,padding:10}}\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                disabled={!isEnabled || this.state.submitted}\r\n                                loading={setLoading}\r\n                                text={'Edit info'}\r\n                                done={finished}\r\n                                >\r\n                                {\r\n                                    'Edit info'\r\n                                }\r\n                                </LoadingButton>\r\n\r\n                            </ValidatorForm>\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    user:state.userData.user,\r\n    loading:state.userData.loading,\r\n    response:state.authReducer.utilityReducer.response\r\n})\r\n\r\nexport default connect(mapStateToProps,{me,storeUtitlity,showMainDialog})(EditInfo)"]},"metadata":{},"sourceType":"module"}