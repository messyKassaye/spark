{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\users\\\\widgets\\\\AddMedia.js\";\nimport React from 'react';\nimport { me } from '../../state/actions/usersActions';\nimport { connect } from 'react-redux';\nimport { Button, Card, CardMedia, Grid, Typography } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { grey } from '@material-ui/core/colors';\nimport { uploadFile } from '../../../home/state/actions/FileUploadAction';\nimport { uploadMedia } from '../state/actions/AddMediaAction';\n\nclass AddMedia extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onFileUpload = () => {\n      this.inputOpenFileRef.current.click();\n    };\n\n    this.onFileChange = event => {\n      // Update the state \n      const file = event.target.files[0];\n      const formData = new FormData();\n      formData.append('file', file);\n      this.setState({\n        uploading: true\n      });\n      this.props.uploadFile(formData);\n    };\n\n    this.state = {\n      medias: [],\n      uploading: false\n    };\n    this.inputOpenFileRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.me();\n    const {\n      medias\n    } = this.state;\n    medias.push(this.props.user.attribute.profile_pic_path);\n    console.log(`Size: ${medias.length}`);\n    this.setState(medias);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.response.path !== '') {\n      const {\n        medias\n      } = this.state;\n      medias.push(nextProps.response.path);\n      this.setState({\n        medias,\n        uploading: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(Skeleton, {\n      variant: 'rect',\n      width: 400,\n      height: 200,\n      style: {\n        backgroundColor: grey[500]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginBottom: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }, this.state.medias.map(media => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 4,\n      xs: 4,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      style: {\n        width: '100%',\n        height: 150\n      },\n      image: media,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 53\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: 'column',\n        alignItems: \"center\",\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: \"none\"\n      },\n      onChange: this.onFileChange,\n      type: \"file\",\n      ref: this.inputOpenFileRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }), this.state.uploading ? /*#__PURE__*/React.createElement(Typography, {\n      color: 'primary',\n      variant: 'h4',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 49\n      }\n    }, \"Uploading...\") : /*#__PURE__*/React.createElement(Button, {\n      variant: 'contained',\n      color: 'primary',\n      onClick: this.onFileUpload,\n      size: 'medium',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 49\n      }\n    }, \"Add new media\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.userData.user,\n  loading: state.userData.loading,\n  response: state.homeReducer.fileUploadReducer.response,\n  medias: state.authReducer.usersReducer.addMediaReducer.medias\n});\n\nexport default connect(mapStateToProps, {\n  me,\n  uploadFile,\n  uploadMedia\n})(AddMedia);","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/users/widgets/AddMedia.js"],"names":["React","me","connect","Button","Card","CardMedia","Grid","Typography","Skeleton","grey","uploadFile","uploadMedia","AddMedia","Component","constructor","props","onFileUpload","inputOpenFileRef","current","click","onFileChange","event","file","target","files","formData","FormData","append","setState","uploading","state","medias","createRef","componentDidMount","push","user","attribute","profile_pic_path","console","log","length","componentWillReceiveProps","nextProps","nextContext","response","path","render","loading","backgroundColor","display","flexDirection","marginBottom","map","media","width","height","alignItems","marginTop","mapStateToProps","userData","homeReducer","fileUploadReducer","authReducer","usersReducer","addMediaReducer"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {me} from '../../state/actions/usersActions'\r\nimport {connect} from 'react-redux'\r\nimport { Button, Card, CardMedia, Grid, Typography } from '@material-ui/core'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport { grey } from '@material-ui/core/colors'\r\nimport {uploadFile} from '../../../home/state/actions/FileUploadAction'\r\nimport {uploadMedia} from '../state/actions/AddMediaAction'\r\nclass AddMedia extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            medias:[],\r\n            uploading:false\r\n        }\r\n        this.inputOpenFileRef = React.createRef()\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        this.props.me()\r\n        const {medias} = this.state\r\n        medias.push(this.props.user.attribute.profile_pic_path);\r\n        console.log(`Size: ${medias.length}`)\r\n        this.setState(medias)\r\n    }\r\n\r\n    onFileUpload = () => { \r\n        this.inputOpenFileRef.current.click()\r\n      }\r\n\r\n   onFileChange = event => { \r\n     \r\n        // Update the state \r\n        const file = event.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('file', file);\r\n        this.setState({uploading:true})\r\n        this.props.uploadFile(formData)\r\n        \r\n      }\r\n\r\n      componentWillReceiveProps(nextProps, nextContext) {\r\n        if(nextProps.response.path!==''){\r\n\r\n            const {medias} = this.state\r\n            medias.push(nextProps.response.path)\r\n            this.setState({\r\n                medias,\r\n                uploading:false,\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.loading\r\n                    ?\r\n                        (\r\n                            <Skeleton\r\n                            variant={'rect'}\r\n                            width={400}\r\n                            height={200}\r\n                            style={{backgroundColor:grey[500]}}/>\r\n                        )\r\n                    :\r\n                        (\r\n                            <div style={{display:'flex',flexDirection:'column',marginBottom:30}}>\r\n                                \r\n                                <Grid container spacing={2}>\r\n                                    {\r\n                                        this.state.medias\r\n                                        .map(media=>(\r\n                                            <Grid item md={4} xs={4} sm={4}>\r\n                                                <Card>\r\n                                                    <CardMedia\r\n                                                    style={{width:'100%',height:150}}\r\n                                                     image={media}\r\n                                                    >\r\n\r\n                                                    </CardMedia>\r\n                                                </Card>\r\n                                            </Grid>\r\n                                        ))\r\n                                    }\r\n                                </Grid>\r\n                                <div style={{display:\"flex\",flexDirection:'column',\r\n                                alignItems:\"center\",marginTop:20}}>\r\n                                    <input \r\n                                    style={{display:\"none\"}}\r\n                                    onChange={this.onFileChange}\r\n                                    type=\"file\" \r\n                                    ref={this.inputOpenFileRef}/> \r\n\r\n                                    {\r\n                                        this.state.uploading\r\n                                        ?\r\n                                            (\r\n                                                <Typography color={'primary'} variant={'h4'}>\r\n                                                    Uploading...\r\n                                                </Typography>\r\n                                            )\r\n                                        :\r\n                                            (\r\n                                                <Button \r\n                                                variant={'contained'} \r\n                                                color={'primary'} \r\n                                                onClick={this.onFileUpload}\r\n                                                size={'medium'}>\r\n                                                    Add new media\r\n                                                </Button>\r\n                                            )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    user:state.userData.user,\r\n    loading:state.userData.loading,\r\n    response:state.homeReducer.fileUploadReducer.response,\r\n    medias:state.authReducer.usersReducer.addMediaReducer.medias\r\n})\r\n\r\nexport default connect(mapStateToProps,{me,uploadFile,uploadMedia})(AddMedia)"]},"metadata":{},"sourceType":"module"}