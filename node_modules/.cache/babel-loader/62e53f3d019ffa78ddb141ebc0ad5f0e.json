{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\home\\\\dialogs\\\\AgreementDialog.js\";\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport agreementStyle from './styles/agreementStyle';\nimport { Card, CardHeader, Grid, Typography } from '@material-ui/core';\nimport logo from '../../assets/logo.png';\nimport LogoComponent from '../../authentication/commons/LogoComponent';\nimport rules from './data/rules';\nimport { Check } from '@material-ui/icons';\nimport LoadingButton from '../../authentication/commons/LoadingButton';\nimport { connect } from 'react-redux';\nimport { showMainDialog } from '../../authentication/commons/state/actions/dialogActions';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\n\nclass AgreementDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.agreed = () => {\n      this.setState({\n        submitted: true,\n        loading: true\n      });\n      setTimeout(() => {\n        this.props.showMainDialog({\n          show: false,\n          maxWidth: 'sm',\n          page: null,\n          title: ``,\n          actions: {\n            on: false,\n            path: '',\n            id: ''\n          }\n        });\n      }, 1000);\n    };\n\n    this.state = {\n      submitted: false,\n      loading: false,\n      finished: false\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    const {\n      finished\n    } = this.state;\n    const setLoading = !finished && loading;\n    const isEnabled = true;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LogoComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Welcome to Spark\"), /*#__PURE__*/React.createElement(Typography, {\n      color: 'textSecondary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Please follow these house rules\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mainRules,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, rules.map(rule => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 12,\n      xs: 12,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      elevation: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      avatar: /*#__PURE__*/React.createElement(Check, {\n        color: 'primary',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 45\n        }\n      }),\n      title: /*#__PURE__*/React.createElement(Typography, {\n        color: 'textSecondary',\n        style: {\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 41\n        }\n      }, rule.name),\n      subheader: /*#__PURE__*/React.createElement(Typography, {\n        color: 'textSecondary',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 41\n        }\n      }, rule.description),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.footer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LoadingButton, {\n      onClick: this.agreed,\n      className: classes.button,\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      disabled: !isEnabled || this.state.submitted,\n      loading: setLoading,\n      text: 'I Agree',\n      done: finished,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, 'I Agree')));\n  }\n\n}\n\nexport default connect(null, {\n  showMainDialog\n})(withStyles(agreementStyle)(AgreementDialog));","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/home/dialogs/AgreementDialog.js"],"names":["React","withStyles","agreementStyle","Card","CardHeader","Grid","Typography","logo","LogoComponent","rules","Check","LoadingButton","connect","showMainDialog","ValidatorForm","AgreementDialog","Component","constructor","props","agreed","setState","submitted","loading","setTimeout","show","maxWidth","page","title","actions","on","path","id","state","finished","render","classes","setLoading","isEnabled","container","header","mainRules","map","rule","fontWeight","name","description","footer","button"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport agreementStyle from './styles/agreementStyle'\r\nimport { Card, CardHeader, Grid, Typography } from '@material-ui/core'\r\nimport logo from '../../assets/logo.png'\r\nimport LogoComponent from '../../authentication/commons/LogoComponent'\r\nimport rules from './data/rules'\r\nimport { Check } from '@material-ui/icons'\r\nimport LoadingButton from '../../authentication/commons/LoadingButton'\r\nimport {connect} from 'react-redux'\r\nimport {showMainDialog} from '../../authentication/commons/state/actions/dialogActions'\r\nimport { ValidatorForm } from 'react-material-ui-form-validator'\r\nclass AgreementDialog extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            submitted: false,\r\n            loading: false,\r\n            finished: false,\r\n        }\r\n    }\r\n\r\n    agreed = ()=>{\r\n        this.setState({\r\n            submitted: true,\r\n            loading: true\r\n        })\r\n        setTimeout(()=>{\r\n            this.props.showMainDialog({\r\n                show:false,\r\n                maxWidth:'sm',\r\n                page:null,\r\n                title:``,\r\n                actions:{\r\n                    on:false,\r\n                    path:'',\r\n                    id:''\r\n                }\r\n            })\r\n        },1000)\r\n    }\r\n    \r\n\r\n    render() {\r\n        const {classes} = this.props\r\n        const {loading} = this.state;\r\n        const {finished} = this.state\r\n        const setLoading = !finished && loading;\r\n        const isEnabled = true\r\n        return (\r\n            <div className={classes.container}>\r\n                {/* agreement dialog header components */}\r\n                <div className={classes.header}>\r\n                <LogoComponent/>\r\n                <Typography>\r\n                    Welcome to Spark\r\n                </Typography>\r\n                <Typography color={'textSecondary'}>\r\n                    Please follow these house rules\r\n                </Typography>\r\n                </div>\r\n                {/* end of agreement dialog header component*/}\r\n\r\n                {/* main rules */}\r\n                <div className={classes.mainRules}>\r\n                    <Grid container spacing={2}>\r\n                    {\r\n                        rules.map(rule=>(\r\n                            <Grid item md={12} xs={12} sm={12}>\r\n                                <Card elevation={0}>\r\n                                    <CardHeader\r\n                                    avatar={<Check color={'primary'}/>}\r\n                                    title={\r\n                                        <Typography color={'textSecondary'} style={{fontWeight:'bold'}}>\r\n                                            {rule.name}\r\n                                        </Typography>\r\n                                    }\r\n                                    subheader={\r\n                                        <Typography color={'textSecondary'}>\r\n                                            {rule.description}\r\n                                        </Typography>\r\n                                    }\r\n                                    />\r\n                                </Card>\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n                    </Grid>\r\n                </div>\r\n\r\n                <div className={classes.footer}>\r\n                <LoadingButton\r\n                    onClick={this.agreed}\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    disabled={!isEnabled || this.state.submitted}\r\n                    loading={setLoading}\r\n                    text={'I Agree'}\r\n                    done={finished}\r\n                    >\r\n                    {\r\n                        'I Agree'\r\n                    }\r\n                    </LoadingButton>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,{showMainDialog})(withStyles(agreementStyle)(AgreementDialog))"]},"metadata":{},"sourceType":"module"}