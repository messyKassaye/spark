{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\users\\\\dialogs\\\\ChangeProfilePicture.js\";\nimport React from 'react';\nimport { indexMedia } from '../state/actions/AddMediaAction';\nimport { connect } from 'react-redux';\nimport { Button, Card, CardActions, CardMedia, Grid, Typography } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { grey } from '@material-ui/core/colors';\nimport { showMainDialog } from '../../commons/state/actions/dialogActions';\nimport { changeProfilePicture } from '../../state/actions/usersActions';\n\nclass ChangeProfilePicture extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeProfile = mediaPath => {\n      const formData = {\n        path: mediaPath\n      };\n      console.log(formData);\n      this.props.changeProfilePicture(formData);\n      this.setState({\n        changing: true\n      });\n    };\n\n    this.onFileUpload = () => {\n      this.inputOpenFileRef.current.click();\n    };\n\n    this.onFileChange = event => {\n      // Update the state \n      const file = event.target.files[0];\n      const formData = new FormData();\n      formData.append('file', file);\n      this.setState({\n        uploading: true\n      }); //this.props.uploadMedia(formData)\n    };\n\n    this.state = {\n      changing: false\n    };\n    this.inputOpenFileRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.indexMedia();\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.response.status) {\n      setTimeout(() => {\n        this.props.showMainDialog({\n          'show': false,\n          'page': null,\n          'title': '',\n          actions: {\n            on: false,\n            path: '',\n            id: ''\n          }\n        });\n      }, 2000);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      variant: 'rect',\n      width: '100%',\n      height: 100,\n      style: {\n        backgroundColor: grey[500],\n        marginBottom: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      variant: 'rect',\n      width: '100%',\n      height: 100,\n      style: {\n        backgroundColor: grey[500]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, this.state.changing ? /*#__PURE__*/React.createElement(Typography, {\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 45\n      }\n    }, this.props.response.message) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 49\n      }\n    }, this.props.medias.map(media => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 4,\n      xs: 3,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      style: {\n        width: '100%',\n        height: 150\n      },\n      image: media.media_path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(CardActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: 'text',\n      color: 'primary',\n      onClick: () => this.changeProfile(media.media_path),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 81\n      }\n    }, \"Select\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 25,\n        display: \"flex\",\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: \"none\"\n      },\n      onChange: this.onFileChange,\n      type: \"file\",\n      ref: this.inputOpenFileRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: 'primary',\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 57\n      }\n    }, \"Add new picture\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  medias: state.authReducer.usersReducer.addMediaReducer.medias,\n  loading: state.authReducer.usersReducer.addMediaReducer.loading,\n  response: state.userData.response\n});\n\nexport default connect(mapStateToProps, {\n  indexMedia,\n  changeProfilePicture,\n  showMainDialog\n})(ChangeProfilePicture);","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/users/dialogs/ChangeProfilePicture.js"],"names":["React","indexMedia","connect","Button","Card","CardActions","CardMedia","Grid","Typography","Skeleton","grey","showMainDialog","changeProfilePicture","ChangeProfilePicture","Component","constructor","props","changeProfile","mediaPath","formData","path","console","log","setState","changing","onFileUpload","inputOpenFileRef","current","click","onFileChange","event","file","target","files","FormData","append","uploading","state","createRef","componentDidMount","componentWillReceiveProps","nextProps","nextContext","response","status","setTimeout","actions","on","id","render","loading","backgroundColor","marginBottom","message","medias","map","media","width","height","media_path","marginTop","display","flexDirection","alignItems","mapStateToProps","authReducer","usersReducer","addMediaReducer","userData"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {indexMedia} from '../state/actions/AddMediaAction'\r\nimport {connect} from 'react-redux'\r\nimport { Button, Card, CardActions, CardMedia, Grid, Typography } from '@material-ui/core'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport { grey } from '@material-ui/core/colors'\r\nimport {showMainDialog} from '../../commons/state/actions/dialogActions'\r\nimport {changeProfilePicture} from '../../state/actions/usersActions'\r\nclass ChangeProfilePicture extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            changing:false\r\n        }\r\n        this.inputOpenFileRef = React.createRef()\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        this.props.indexMedia()\r\n\r\n    }\r\n\r\n    changeProfile = (mediaPath)=>{\r\n        \r\n        const formData = {\r\n            path:mediaPath\r\n        }\r\n        console.log(formData)\r\n        this.props.changeProfilePicture(formData)\r\n        this.setState({\r\n            changing:true\r\n        })\r\n\r\n    }\r\n\r\n    onFileUpload = () => { \r\n        this.inputOpenFileRef.current.click()\r\n      }\r\n\r\n   onFileChange = event => { \r\n     \r\n        // Update the state \r\n        const file = event.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('file', file);\r\n        this.setState({uploading:true})\r\n        //this.props.uploadMedia(formData)\r\n        \r\n      }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if(nextProps.response.status){\r\n            setTimeout(()=>{\r\n                this.props.showMainDialog({'show':false,'page':null,'title':'',actions:{on:false,path:'',id:''}})\r\n\r\n            },2000)\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.loading\r\n                    ?\r\n                        (\r\n                            <div>\r\n                                <Skeleton\r\n                                 variant={'rect'}\r\n                                 width={'100%'}\r\n                                 height={100}\r\n                                 style={{backgroundColor:grey[500],marginBottom:15}}\r\n                                />\r\n                                <Skeleton\r\n                                 variant={'rect'}\r\n                                 width={'100%'}\r\n                                 height={100}\r\n                                 style={{backgroundColor:grey[500]}}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    :\r\n                        (\r\n                            <div>\r\n                                {\r\n                                    this.state.changing\r\n                                    ?\r\n                                        (\r\n                                            <Typography color={'primary'}>\r\n                                                {this.props.response.message}\r\n                                            </Typography>\r\n                                        )\r\n                                    :\r\n                                        (\r\n                                            <div>\r\n                                                <Grid container spacing={2}>\r\n                                                {\r\n                                                    this.props.medias.map(media=>(\r\n                                                        <Grid item md={4} xs={3} sm={3}>\r\n                                                                        <Card>\r\n                                                                            <CardMedia\r\n                                                                            style={{width:'100%',height:150}}\r\n                                                                            image={media.media_path}\r\n                                                                            />\r\n                                                                            <CardActions>\r\n                                                                                <Button\r\n                                                                                variant={'text'}\r\n                                                                                color={'primary'}\r\n                                                                                onClick={()=>this.changeProfile(media.media_path)}\r\n                                                                                >\r\n                                                                                    Select\r\n                                                                                </Button>\r\n                                                                            </CardActions>\r\n                                                                        </Card>\r\n                                                                    </Grid>\r\n                                                                ))\r\n                                                            }\r\n                                                    </Grid>\r\n\r\n                                                    <div style={{marginTop:25,display:\"flex\",flexDirection:'column',alignItems:'center'}}>\r\n                                                   \r\n                                                    <input \r\n                                                    style={{display:\"none\"}}\r\n                                                    onChange={this.onFileChange}\r\n                                                    type=\"file\" \r\n                                                    ref={this.inputOpenFileRef}/> \r\n\r\n                                                        <Button\r\n                                                        color={'primary'}\r\n                                                        variant={\"contained\"}>\r\n                                                            Add new picture\r\n                                                        </Button>\r\n                                                    </div>\r\n                                            </div>\r\n                                        )\r\n                                }\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>({\r\n    medias:state.authReducer.usersReducer.addMediaReducer.medias,\r\n    loading:state.authReducer.usersReducer.addMediaReducer.loading,\r\n    response:state.userData.response,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,{indexMedia,changeProfilePicture,showMainDialog})(ChangeProfilePicture)"]},"metadata":{},"sourceType":"module"}