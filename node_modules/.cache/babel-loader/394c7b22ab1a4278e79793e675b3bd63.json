{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\users\\\\widgets\\\\Chats.js\";\nimport React from 'react';\nimport Pusher from 'pusher-js';\nimport { CardContent, IconButton, Input, Typography } from '@material-ui/core';\nimport RightMessage from './RightMessage';\nimport LeftMessage from './LeftMessage';\nimport { Send } from '@material-ui/icons';\n\nclass Chats extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.chatRef.current.scrollTop += 1;\n      const message = {\n        id: 22,\n        message: this.inputRef.current.value\n      };\n      console.log(message);\n      this.props.chats.push(message);\n    };\n\n    this.sumId = (id1, id2) => {\n      return Number(id1) + Number(id2);\n    };\n\n    this.showData = data => {\n      const {\n        chats\n      } = this.state;\n      chats.push(data);\n      this.setState(chats);\n    };\n\n    this.state = {\n      chats: [],\n      scrollTop: 2\n    };\n    this.chatRef = React.createRef();\n    this.inputRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setState({\n      chats: this.props.chats\n    });\n    this.chatRef.current.scrollTop = this.state.scrollTop;\n    let PUSHER_APP_KEY = \"52d240141d3de6310e4e\";\n    let pusher = new Pusher(PUSHER_APP_KEY, {\n      cluster: 'ap2',\n      forceTLS: true\n    });\n    let channel = pusher.subscribe(`channel-${this.sumId(this.props.user.attribute.id, this.props.chatUser.attribute.id)}`);\n    channel.bind(`broadcast-${this.sumId(this.props.user.attribute.id, this.props.chatUser.attribute.id)}`, data => {\n      this.showData(data);\n      console.log(`message:${data.id}`);\n    });\n  }\n\n  componentDidUpdate() {\n    this.chatRef.current.scrollTop = this.state.scrollTop;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: 200\n      },\n      ref: this.chatRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, this.props.chats.map(chat => {\n      return chat.sender === this.props.user.attribute.id ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          padding: 50,\n          flexDirection: 'row',\n          justifyContent: 'flex-end'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 34\n        }\n      }, chat.message) : /*#__PURE__*/React.createElement(LeftMessage, {\n        chat: chat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 34\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      ref: this.inputRef,\n      style: {\n        width: '90%'\n      },\n      placeholder: 'Write your message...',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleClick,\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Send, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Chats;","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/users/widgets/Chats.js"],"names":["React","Pusher","CardContent","IconButton","Input","Typography","RightMessage","LeftMessage","Send","Chats","Component","constructor","props","handleClick","chatRef","current","scrollTop","message","id","inputRef","value","console","log","chats","push","sumId","id1","id2","Number","showData","data","state","setState","createRef","componentDidMount","PUSHER_APP_KEY","pusher","cluster","forceTLS","channel","subscribe","user","attribute","chatUser","bind","componentDidUpdate","render","display","flexDirection","height","map","chat","sender","padding","justifyContent","width"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Pusher from 'pusher-js'\r\nimport { CardContent, IconButton, Input, Typography } from '@material-ui/core';\r\nimport RightMessage from './RightMessage';\r\nimport LeftMessage from './LeftMessage';\r\nimport { Send } from '@material-ui/icons';\r\n\r\nclass Chats extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chats:[],\r\n            scrollTop:2\r\n        }\r\n\r\n        this.chatRef = React.createRef()\r\n        this.inputRef = React.createRef()\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            chats:this.props.chats\r\n        })\r\n        this.chatRef.current.scrollTop = this.state.scrollTop\r\n        let PUSHER_APP_KEY = \"52d240141d3de6310e4e\"\r\n        let pusher = new Pusher(PUSHER_APP_KEY, {\r\n        cluster: 'ap2',\r\n        forceTLS: true\r\n        });\r\n        \r\n        let channel = pusher.subscribe(`channel-${this.sumId(this.props.user.attribute.id,this.props.chatUser.attribute.id)}`);\r\n        channel.bind(`broadcast-${this.sumId(this.props.user.attribute.id,this.props.chatUser.attribute.id)}`,(data)=>{\r\n        this.showData(data)\r\n        console.log(`message:${data.id}`)\r\n\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.chatRef.current.scrollTop = this.state.scrollTop\r\n    }\r\n\r\n    handleClick = ()=>{\r\n        this.chatRef.current.scrollTop +=1\r\n        const message={\r\n            id:22,\r\n            message:this.inputRef.current.value\r\n        }\r\n        console.log(message)\r\n        this.props.chats.push(message)\r\n    }\r\n\r\n    sumId = (id1,id2)=>{\r\n        return Number(id1)+Number(id2);\r\n    }\r\n\r\n    showData = (data)=>{\r\n        const {chats} = this.state\r\n        chats.push(data)\r\n        this.setState(chats)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{display:'flex',flexDirection:'column',height:200}} ref={this.chatRef}>\r\n                {\r\n                    this.props.chats.map(chat=>{\r\n                        return chat.sender===this.props.user.attribute.id\r\n                        ?\r\n                            (\r\n                                 <div style={{display:'flex',padding:50,flexDirection:'row',justifyContent:'flex-end'}}>\r\n                                     {chat.message}\r\n                                 </div>\r\n                            )\r\n                        :\r\n                            (\r\n                                 <LeftMessage chat={chat}/>\r\n                            )\r\n                    })\r\n                }\r\n                </div>\r\n                <div style={{display:'flex',flexDirection:'row'}}>\r\n                    <Input\r\n                    ref={this.inputRef}\r\n                    style={{width:'90%'}}\r\n                     placeholder={'Write your message...'}\r\n                    />\r\n                    <IconButton onClick={this.handleClick} color={'primary'}>\r\n                        <Send/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chats"]},"metadata":{},"sourceType":"module"}