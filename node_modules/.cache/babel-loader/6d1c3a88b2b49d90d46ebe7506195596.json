{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\users\\\\dialogs\\\\OptionComponent.js\";\nimport { Chip, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { indexPassion } from '../state/actions/PassionAction';\nimport { connect } from 'react-redux';\nimport { Skeleton } from '@material-ui/lab';\nimport { grey } from '@material-ui/core/colors';\n\nclass OptionComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePassion = passion => {\n      const selectedPassion = this.state;\n      selectedPassion.push(passion);\n      this.setState(selectedPassion);\n    };\n\n    this.state = {\n      selectedPassion: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.indexPassion();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: 'textSecondary',\n      style: {\n        marginBottom: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    }, \"Select passions that you'd like to share with the people you connect with. Choose a minimum of 3\"), this.props.loading ? /*#__PURE__*/React.createElement(Skeleton, {\n      variant: 'rect',\n      width: \"100%\",\n      height: 50,\n      style: {\n        backgroundColor: grey[500]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }, this.props.passions.map(passion => /*#__PURE__*/React.createElement(Chip, {\n      color: 'primary',\n      onClick: () => this.handlePassion(passion),\n      label: passion.name,\n      variant: \"outlined\",\n      style: {\n        margin: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 41\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  passions: state.authReducer.usersReducer.passionReducer.passions,\n  loading: state.authReducer.usersReducer.passionReducer.loading\n});\n\nexport default connect(mapStateToProps, {\n  indexPassion\n})(OptionComponent);","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/users/dialogs/OptionComponent.js"],"names":["Chip","Typography","React","indexPassion","connect","Skeleton","grey","OptionComponent","Component","constructor","props","handlePassion","passion","selectedPassion","state","push","setState","componentDidMount","render","display","flexDirection","alignItems","marginBottom","loading","backgroundColor","passions","map","name","margin","mapStateToProps","authReducer","usersReducer","passionReducer"],"mappings":";AAAA,SAASA,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,gCAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,IAAT,QAAqB,0BAArB;;AACA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,aAZmB,GAYHC,OAAD,IAAW;AACtB,YAAMC,eAAe,GAAG,KAAKC,KAA7B;AACAD,MAAAA,eAAe,CAACE,IAAhB,CAAqBH,OAArB;AACA,WAAKI,QAAL,CAAcH,eAAd;AACH,KAhBkB;;AAEf,SAAKC,KAAL,GAAY;AACRD,MAAAA,eAAe,EAAC;AADR,KAAZ;AAGH;;AAGDI,EAAAA,iBAAiB,GAAE;AACf,SAAKP,KAAL,CAAWP,YAAX;AACH;;AAQDe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC,MAAT;AAAgBC,QAAAA,aAAa,EAAC,QAA9B;AAAuCC,QAAAA,UAAU,EAAC;AAAlD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,eAAnB;AAAoC,MAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAC;AAAd,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GADH,EAMQ,KAAKZ,KAAL,CAAWa,OAAX,gBAGQ,oBAAC,QAAD;AACC,MAAA,OAAO,EAAE,MADV;AAEC,MAAA,KAAK,EAAC,MAFP;AAGC,MAAA,MAAM,EAAE,EAHT;AAIC,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAClB,IAAI,CAAC,GAAD;AAArB,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,gBAYQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKI,KAAL,CAAWe,QAAX,CAAoBC,GAApB,CAAwBd,OAAO,iBAC3B,oBAAC,IAAD;AACA,MAAA,KAAK,EAAE,SADP;AAEA,MAAA,OAAO,EAAE,MAAI,KAAKD,aAAL,CAAmBC,OAAnB,CAFb;AAGA,MAAA,KAAK,EAAEA,OAAO,CAACe,IAHf;AAIA,MAAA,OAAO,EAAC,UAJR;AAKA,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFR,CAlBhB,CADJ;AAmCH;;AAxDwC;;AA2D7C,MAAMC,eAAe,GAAGf,KAAK,KAAG;AAC/BW,EAAAA,QAAQ,EAACX,KAAK,CAACgB,WAAN,CAAkBC,YAAlB,CAA+BC,cAA/B,CAA8CP,QADxB;AAE/BF,EAAAA,OAAO,EAACT,KAAK,CAACgB,WAAN,CAAkBC,YAAlB,CAA+BC,cAA/B,CAA8CT;AAFvB,CAAH,CAA7B;;AAKA,eAAenB,OAAO,CAACyB,eAAD,EAAiB;AAAC1B,EAAAA;AAAD,CAAjB,CAAP,CAAwCI,eAAxC,CAAf","sourcesContent":["import { Chip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {indexPassion} from '../state/actions/PassionAction'\r\nimport {connect} from 'react-redux'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport { grey } from '@material-ui/core/colors'\r\nclass OptionComponent extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            selectedPassion:[]\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        this.props.indexPassion()\r\n    }\r\n\r\n    handlePassion =(passion)=>{\r\n        const selectedPassion = this.state\r\n        selectedPassion.push(passion)\r\n        this.setState(selectedPassion)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{display:'flex',flexDirection:'column',alignItems:'flex-start'}}>\r\n               <Typography color={'textSecondary'} style={{marginBottom:15}}>\r\n                   Select passions that you'd like to share with the people you connect with. \r\n                   Choose a minimum of 3\r\n               </Typography>\r\n                {\r\n                    this.props.loading\r\n                    ?\r\n                        (\r\n                            <Skeleton\r\n                             variant={'rect'}\r\n                             width=\"100%\"\r\n                             height={50}\r\n                             style={{backgroundColor:grey[500]}}\r\n                            />\r\n                        )\r\n                    :\r\n                        (\r\n                            <div>\r\n                                {\r\n                                    this.props.passions.map(passion=>(\r\n                                        <Chip \r\n                                        color={'primary'}\r\n                                        onClick={()=>this.handlePassion(passion)}\r\n                                        label={passion.name}\r\n                                        variant=\"outlined\"\r\n                                        style={{margin:5}} />\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n passions:state.authReducer.usersReducer.passionReducer.passions,\r\n loading:state.authReducer.usersReducer.passionReducer.loading\r\n})\r\n\r\nexport default connect(mapStateToProps,{indexPassion})(OptionComponent)"]},"metadata":{},"sourceType":"module"}