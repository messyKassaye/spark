{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\commons\\\\MainDialog.js\";\nimport React, { Component } from 'react';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { connect } from \"react-redux\";\nimport { showMainDialog } from \"../commons/state/actions/dialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport adminMainDialogStyle from \"./styles/mainDialogStyle\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { DialogActions, Paper, Typography } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport LoadingButton from \"./LoadingButton\";\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    in: true,\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  }));\n});\n\nclass MainDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.props.showMainDialog({\n        'show': false,\n        'page': null,\n        'title': '',\n        actions: {\n          on: false,\n          path: '',\n          id: ''\n        }\n      });\n    };\n\n    this.renderComponent = page => {\n      return page;\n    };\n\n    this.deleteItem = (path, id) => {\n      this.setState({\n        submitted: true,\n        loading: true,\n        deletingMessage: 'Deleting on progress'\n      });\n      this.props.deleteAction(path, id);\n    };\n\n    this.renderHeaderComponent = header => {\n      return header;\n    };\n\n    this.state = {\n      open: false,\n      fullScreen: false,\n      submitted: false,\n      loading: false,\n      finished: false,\n      showStatus: false,\n      deletingMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    let deviceWidth = window.innerWidth;\n\n    if (deviceWidth <= 760) {\n      this.setState({\n        fullScreen: true\n      });\n    } else {\n      this.setState({\n        fullScreen: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      t\n    } = this.props;\n    const {\n      finished\n    } = this.state;\n    const {\n      loading\n    } = this.state;\n    const setLoading = !finished && loading;\n    const isEnabled = true;\n    return /*#__PURE__*/React.createElement(Dialog, {\n      maxWidth: this.props.showData.maxWidth,\n      style: {\n        top: 5\n      },\n      fullScreen: this.state.fullScreen || this.props.showData.fullScreen,\n      disableBackdropClick: true,\n      open: this.props.showData.show,\n      scrollPaper: \"paper\",\n      keepMounted: true,\n      style: {\n        height: 'auto',\n        overflowY: 'scroll'\n      },\n      fullWidth: true,\n      TransitionComponent: Transition,\n      onClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, this.props.showData.showTitle === false ? null : /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"customized-dialog-title\",\n      onClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, this.props.showData.headers ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 45\n      }\n    }, this.renderHeaderComponent(this.props.showData.headerComponent)) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        fontSize: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 49\n      }\n    }, this.props.showData.title), /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.closeButton,\n      color: \"inherit\",\n      \"aria-label\": \"close dialog\",\n      onClick: this.handleClose,\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(DialogContent, {\n      dividers: true,\n      style: {\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, this.renderComponent(this.props.showData.page)), this.props.showData.actions.on === true ? /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, this.props.response.status ? /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        color: green[500]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 49\n      }\n    }, \"Successfully deleted\") : /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 46\n      }\n    }, this.state.deletingMessage)), /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      variant: \"text\",\n      onClick: () => this.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(LoadingButton, {\n      color: \"primary\",\n      variant: \"outlined\",\n      disabled: !isEnabled || this.state.submitted,\n      loading: setLoading,\n      text: 'Yes',\n      done: finished,\n      onClick: () => this.deleteItem(this.props.showData.actions.path, this.props.showData.actions.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, \"Yes\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 26\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  showData: state.authReducer.commonReducer.dialogReducers.showDialog\n});\n\nexport default connect(mapStateToProps, {\n  showMainDialog\n})(withStyles(adminMainDialogStyle)(MainDialog));","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/commons/MainDialog.js"],"names":["React","Component","Dialog","CloseIcon","IconButton","DialogContent","DialogTitle","Slide","connect","showMainDialog","Button","adminMainDialogStyle","withStyles","DialogActions","Paper","Typography","green","LoadingButton","Transition","forwardRef","props","ref","MainDialog","constructor","handleClose","actions","on","path","id","renderComponent","page","deleteItem","setState","submitted","loading","deletingMessage","deleteAction","renderHeaderComponent","header","state","open","fullScreen","finished","showStatus","componentDidMount","deviceWidth","window","innerWidth","render","classes","t","setLoading","isEnabled","showData","maxWidth","top","show","height","overflowY","showTitle","headers","headerComponent","fontSize","title","closeButton","padding","response","status","color","mapStateToProps","authReducer","commonReducer","dialogReducers","showDialog"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport {connect} from \"react-redux\";\r\nimport {showMainDialog} from \"../commons/state/actions/dialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport adminMainDialogStyle from \"./styles/mainDialogStyle\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {DialogActions, Paper, Typography} from \"@material-ui/core\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport LoadingButton from \"./LoadingButton\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" in={true} ref={ref} {...props} />;\r\n});\r\nclass MainDialog extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            open:false,\r\n            fullScreen: false,\r\n            submitted: false,\r\n            loading: false,\r\n            finished: false,\r\n            showStatus:false,\r\n            deletingMessage:''\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    handleClose = ()=>{\r\n        this.props.showMainDialog({'show':false,'page':null,'title':'',actions:{on:false,path:'',id:''}})\r\n    }\r\n\r\n    renderComponent = (page)=>{\r\n        return page\r\n    }\r\n\r\n    deleteItem = (path,id)=>{\r\n        this.setState({\r\n            submitted: true,\r\n            loading: true,\r\n            deletingMessage:'Deleting on progress'\r\n        })\r\n      this.props.deleteAction(path,id)\r\n    }\r\n    componentDidMount() {\r\n        let deviceWidth = window.innerWidth;\r\n        if(deviceWidth<=760){\r\n            this.setState({\r\n                fullScreen:true,\r\n            })\r\n        }else {\r\n            this.setState({\r\n                fullScreen:false\r\n            })\r\n        }\r\n    }\r\n\r\n    renderHeaderComponent = header=>{\r\n        return header\r\n    }\r\n\r\n    render() {\r\n        const {classes,t} = this.props\r\n        const {finished} = this.state\r\n        const {loading} = this.state;\r\n        const setLoading = !finished && loading;\r\n        const isEnabled = true\r\n        return (\r\n            <Dialog\r\n                maxWidth={this.props.showData.maxWidth}\r\n                style={{top:5}}\r\n                fullScreen={this.state.fullScreen||this.props.showData.fullScreen}\r\n                disableBackdropClick={true}\r\n                open={this.props.showData.show}\r\n                scrollPaper='paper'\r\n                keepMounted\r\n                style={{height:'auto',overflowY:'scroll'}}\r\n                fullWidth={true}\r\n                TransitionComponent={Transition}\r\n                onClose={this.handleClose}>\r\n                    <Paper >\r\n                    {\r\n                        this.props.showData.showTitle===false\r\n                        ?\r\n                            (null)\r\n                        :\r\n                            (\r\n                                \r\n                            <DialogTitle   id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n                                {\r\n                                    this.props.showData.headers\r\n                                    ?\r\n                                        (\r\n                                            <div>\r\n                                                {this.renderHeaderComponent(this.props.showData.headerComponent)}\r\n                                            </div>\r\n                                        )\r\n                                    :\r\n                                        (\r\n                                            <div>\r\n                                                <Typography style={{fontSize:'16px'}}>{this.props.showData.title}</Typography>\r\n                                                    <IconButton\r\n                                                        className={classes.closeButton}\r\n                                                        color='inherit'\r\n                                                        aria-label='close dialog'\r\n                                                        onClick={this.handleClose}\r\n                                                        edge='end'>\r\n                                                        <CloseIcon/>\r\n                                                </IconButton>\r\n                                            </div>\r\n                                        )\r\n                                }\r\n                            </DialogTitle>\r\n                            )\r\n                    }\r\n                <DialogContent dividers style={{padding:10}}>\r\n                    {this.renderComponent(this.props.showData.page)}\r\n                </DialogContent>\r\n                {\r\n                    this.props.showData.actions.on===true\r\n                    ?\r\n                        (\r\n                            <DialogActions>\r\n                                <div>\r\n                                    {\r\n                                        this.props.response.status\r\n                                        ?\r\n                                            (\r\n                                                <Typography style={{color:green[500]}}>\r\n                                                    Successfully deleted\r\n                                                </Typography>\r\n                                            )\r\n                                        :\r\n                                            (<Typography>{this.state.deletingMessage}</Typography>)\r\n                                    }\r\n                                </div>\r\n\r\n                                <Button color='secondary' variant='text' onClick={()=>this.handleClose()}>\r\n                                    No\r\n                                </Button>\r\n\r\n                                <LoadingButton\r\n                                    color='primary'\r\n                                    variant='outlined'\r\n                                    disabled={!isEnabled || this.state.submitted}\r\n                                    loading={setLoading}\r\n                                    text={'Yes'}\r\n                                    done={finished}\r\n                                    onClick={\r\n                                        ()=>this.deleteItem(this.props.showData.actions.path,this.props.showData.actions.id)}>\r\n                                    Yes\r\n                                </LoadingButton>\r\n                            </DialogActions>\r\n                        )\r\n                    :\r\n                        (<div></div>)\r\n                }\r\n                    </Paper>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    showData: state.authReducer.commonReducer.dialogReducers.showDialog,\r\n})\r\n\r\nexport default connect(mapStateToProps,{showMainDialog})\r\n(withStyles(adminMainDialogStyle)(MainDialog));\r\n"]},"metadata":{},"sourceType":"module"}