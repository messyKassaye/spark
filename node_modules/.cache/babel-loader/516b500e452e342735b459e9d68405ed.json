{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { get, removeToken, set, setRefreshToken } from \"../TokenService\";\nimport { API_AUTH_URL } from \"../constants/constants\";\n\nfunction Interceptor() {\n  axios.interceptors.response.use(function (response) {\n    return response;\n  }, function (error) {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      return axios.post('http://localhost:8000/api/auth/refresh', {\n        get\n      }).then(({\n        data\n      }) => {\n        set(data.token);\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + data.token;\n        originalRequest.headers['Authorization'] = 'Bearer ' + data.token;\n        return axios(originalRequest);\n      });\n    }\n\n    return Promise.reject(error);\n  });\n}\n\nexport default Interceptor;","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/interceptors/Interceptor.js"],"names":["useEffect","useState","axios","get","removeToken","set","setRefreshToken","API_AUTH_URL","Interceptor","interceptors","response","use","error","originalRequest","config","status","_retry","post","then","data","token","defaults","headers","common","Promise","reject"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,WAAb,EAA0BC,GAA1B,EAA+BC,eAA/B,QAAqD,iBAArD;AACA,SAAQC,YAAR,QAA2B,wBAA3B;;AAGA,SAASC,WAAT,GAAuB;AACnBN,EAAAA,KAAK,CAACO,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAAUD,QAAV,EAAoB;AAChD,WAAOA,QAAP;AACD,GAFH,EAEK,UAAUE,KAAV,EAAiB;AAElB,UAAMC,eAAe,GAAGD,KAAK,CAACE,MAA9B;;AAEA,QAAIF,KAAK,CAACF,QAAN,CAAeK,MAAf,KAA0B,GAA1B,IAAiC,CAACF,eAAe,CAACG,MAAtD,EAA8D;AAE5DH,MAAAA,eAAe,CAACG,MAAhB,GAAyB,IAAzB;AAEA,aAAOd,KAAK,CAACe,IAAN,CAAW,wCAAX,EAAqD;AAAEd,QAAAA;AAAF,OAArD,EACJe,IADI,CACC,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAY;AAChBd,QAAAA,GAAG,CAACc,IAAI,CAACC,KAAN,CAAH;AACAlB,QAAAA,KAAK,CAACmB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD,YAAYJ,IAAI,CAACC,KAAlE;AACAP,QAAAA,eAAe,CAACS,OAAhB,CAAwB,eAAxB,IAA2C,YAAYH,IAAI,CAACC,KAA5D;AACA,eAAOlB,KAAK,CAACW,eAAD,CAAZ;AACD,OANI,CAAP;AAOD;;AAED,WAAOW,OAAO,CAACC,MAAR,CAAeb,KAAf,CAAP;AACD,GApBH;AAqBH;;AAED,eAAeJ,WAAf","sourcesContent":["import {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {get, removeToken, set, setRefreshToken} from \"../TokenService\";\r\nimport {API_AUTH_URL} from \"../constants/constants\";\r\n\r\n\r\nfunction Interceptor() {\r\n    axios.interceptors.response.use(function (response) {\r\n        return response;\r\n      }, function (error) {\r\n      \r\n        const originalRequest = error.config;\r\n      \r\n        if (error.response.status === 401 && !originalRequest._retry) {\r\n      \r\n          originalRequest._retry = true;\r\n      \r\n          return axios.post('http://localhost:8000/api/auth/refresh', { get })\r\n            .then(({data}) => {\r\n              set(data.token)\r\n              axios.defaults.headers.common['Authorization'] = 'Bearer ' + data.token;\r\n              originalRequest.headers['Authorization'] = 'Bearer ' + data.token;\r\n              return axios(originalRequest);\r\n            });\r\n        }\r\n      \r\n        return Promise.reject(error);\r\n      });\r\n}\r\n\r\nexport default Interceptor\r\n"]},"metadata":{},"sourceType":"module"}