{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\users\\\\dialogs\\\\OptionComponent.js\";\nimport { Chip, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { indexPassion } from '../state/actions/PassionAction';\nimport { connect } from 'react-redux';\nimport { Skeleton } from '@material-ui/lab';\nimport { grey } from '@material-ui/core/colors';\n\nclass OptionComponent extends React.Component {\n  componentDidMount() {\n    this.props.indexPassion();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: 'textSecondary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }\n    }, \"Select passions that you'd like to share with the people you connect with. Choose a minimum of 3\"), this.props.loading ? /*#__PURE__*/React.createElement(Skeleton, {\n      variant: 'rect',\n      width: \"100%\",\n      height: 200,\n      style: {\n        backgroundColor: grey[500]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }\n    }, this.props.passions.map(passion => /*#__PURE__*/React.createElement(Chip, {\n      label: passion.name,\n      variant: \"outlined\",\n      style: {\n        margin: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 41\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  passions: state.authReducer.usersReducer.passionReducer.passions,\n  loading: state.authReducer.usersReducer.passionReducer.loading\n});\n\nexport default connect(mapStateToProps, {\n  indexPassion\n})(OptionComponent);","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/users/dialogs/OptionComponent.js"],"names":["Chip","Typography","React","indexPassion","connect","Skeleton","grey","OptionComponent","Component","componentDidMount","props","render","display","flexDirection","alignItems","loading","backgroundColor","passions","map","passion","name","margin","mapStateToProps","state","authReducer","usersReducer","passionReducer"],"mappings":";AAAA,SAASA,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,gCAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,IAAT,QAAqB,0BAArB;;AACA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA6C;AAEzCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWP,YAAX;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC,MAAT;AAAgBC,QAAAA,aAAa,EAAC,QAA9B;AAAuCC,QAAAA,UAAU,EAAC;AAAlD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0GADH,EAMQ,KAAKJ,KAAL,CAAWK,OAAX,gBAGQ,oBAAC,QAAD;AACC,MAAA,OAAO,EAAE,MADV;AAEC,MAAA,KAAK,EAAC,MAFP;AAGC,MAAA,MAAM,EAAE,GAHT;AAIC,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAACV,IAAI,CAAC,GAAD;AAArB,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,gBAYQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKI,KAAL,CAAWO,QAAX,CAAoBC,GAApB,CAAwBC,OAAO,iBAC3B,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEA,OAAO,CAACC,IAArB;AAA2B,MAAA,OAAO,EAAC,UAAnC;AAA8C,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFR,CAlBhB,CADJ;AA8BH;;AArCwC;;AAwC7C,MAAMC,eAAe,GAAGC,KAAK,KAAG;AAC/BN,EAAAA,QAAQ,EAACM,KAAK,CAACC,WAAN,CAAkBC,YAAlB,CAA+BC,cAA/B,CAA8CT,QADxB;AAE/BF,EAAAA,OAAO,EAACQ,KAAK,CAACC,WAAN,CAAkBC,YAAlB,CAA+BC,cAA/B,CAA8CX;AAFvB,CAAH,CAA7B;;AAKA,eAAeX,OAAO,CAACkB,eAAD,EAAiB;AAACnB,EAAAA;AAAD,CAAjB,CAAP,CAAwCI,eAAxC,CAAf","sourcesContent":["import { Chip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {indexPassion} from '../state/actions/PassionAction'\r\nimport {connect} from 'react-redux'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport { grey } from '@material-ui/core/colors'\r\nclass OptionComponent extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.props.indexPassion()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{display:'flex',flexDirection:'column',alignItems:'flex-start'}}>\r\n               <Typography color={'textSecondary'}>\r\n                   Select passions that you'd like to share with the people you connect with. \r\n                   Choose a minimum of 3\r\n               </Typography>\r\n                {\r\n                    this.props.loading\r\n                    ?\r\n                        (\r\n                            <Skeleton\r\n                             variant={'rect'}\r\n                             width=\"100%\"\r\n                             height={200}\r\n                             style={{backgroundColor:grey[500]}}\r\n                            />\r\n                        )\r\n                    :\r\n                        (\r\n                            <div>\r\n                                {\r\n                                    this.props.passions.map(passion=>(\r\n                                        <Chip label={passion.name} variant=\"outlined\" style={{margin:5}} />\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n passions:state.authReducer.usersReducer.passionReducer.passions,\r\n loading:state.authReducer.usersReducer.passionReducer.loading\r\n})\r\n\r\nexport default connect(mapStateToProps,{indexPassion})(OptionComponent)"]},"metadata":{},"sourceType":"module"}