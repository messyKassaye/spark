{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\users\\\\widgets\\\\PostCard.js\";\nimport { Avatar, Backdrop, Card, CardActionArea, CardActions, CardMedia, Chip, Icon, IconButton, Typography } from '@material-ui/core';\nimport { Clear, FastRewind, FlipToBackSharp, Forward, Room, School, Star } from '@material-ui/icons';\nimport React, { useState, useMemo } from 'react';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport postCardStyle from '../styles/postCardStyle';\nimport TinderCard from 'react-tinder-card';\nimport rewind from '../../../assets/rewind.png';\nimport nope from '../../../assets/nope.png';\nimport star from '../../../assets/star.png';\nimport super_like from '../../../assets/super_like.png';\nimport axios from 'axios';\nimport love from '../../../assets/love.png';\nimport { red } from '@material-ui/core/colors';\nimport { API_URL } from '../../../constants/constants';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NoPeersIsFound from './NoPeersIsFound';\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 15,\n    [theme.breakpoints.down('xs')]: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      maxWidth: 500,\n      marginTop: 0\n    }\n  },\n  icons: {\n    width: 70,\n    height: 70,\n    [theme.breakpoints.down('xs')]: {\n      width: 60,\n      height: 60\n    }\n  }\n}));\nconst alredyRemoved = [];\nconst dataHolder = [];\nlet charactersState = '';\n\nfunction PostCard(props) {\n  const classes = useStyles();\n  charactersState = props;\n  const [characters, setCharacters] = useState(props.post.users);\n  const [lastDirection, setLastDirection] = useState();\n  const [latestIndex, setLatestIndex] = useState();\n  const [direction, setDirection] = useState();\n  const [total, setTotal] = useState(0);\n  const childRefs = useMemo(() => Array(props.post.users.length).fill(0).map(i => React.createRef()), []);\n\n  const swiped = (direction, nameToDelete) => {\n    console.log('removing: ' + nameToDelete);\n    setLastDirection(direction);\n    alredyRemoved.push(nameToDelete);\n  };\n\n  const outOfFrame = name => {\n    console.log(name + ' left the screen!');\n    charactersState = charactersState.filter(character => character.name !== name);\n    setCharacters(charactersState);\n  };\n\n  const swipe = dir => {\n    const cardsLeft = props.post.users.filter(person => !alredyRemoved.includes(person.name));\n\n    if (cardsLeft.length) {\n      const toBeRemoved = cardsLeft[cardsLeft.length - 1].name; // Find the card object to be removed\n\n      const index = props.post.users.map(person => person.name).indexOf(toBeRemoved); // Find the index of which to make the reference to\n\n      console.log(props.post.users);\n      setLatestIndex(index);\n      setDirection(dir);\n      saveLike(dir, props.post.users[index], props);\n      alredyRemoved.push(toBeRemoved); // Make sure the next card gets removed next time if this card do not have time to exit the screen\n\n      setTimeout(() => {\n        childRefs[index].current.swipe(dir); // Swipe the card!\n\n        setTotal(total + 1);\n      }, 500);\n    }\n  };\n\n  const saveLike = (dir, user, props) => {\n    dataHolder.push(props.post);\n\n    if (dir === 'right') {\n      const formData = new FormData();\n      formData.append('user_id', user.id);\n      axios.post(`${API_URL}matches`, formData).then(response => response.data).then(response => {\n        if (response.status) {\n          fetchNewData(props);\n        }\n      });\n    }\n  };\n\n  const fetchNewData = props => {\n    dataHolder.push(props.post);\n    console.log(`Data: ${dataHolder.length}`);\n    axios.get(`${API_URL}posts/single`).then(response => response.data).then(res => {\n      props.post[dataHolder.length - 1] = res.data;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '90%',\n      overflow: 'hidden',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }\n  }, total === props.post.users.length ? /*#__PURE__*/React.createElement(NoPeersIsFound, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 400,\n      maxWidth: 400,\n      height: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, props.post.users.map((users, index) => /*#__PURE__*/React.createElement(TinderCard, {\n    key: index,\n    style: {\n      position: 'absolute'\n    },\n    ref: childRefs[index],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      position: 'absolute'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    style: {\n      width: 400,\n      height: 500\n    },\n    image: users.profile_pic_path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, latestIndex === index && direction === 'right' ? /*#__PURE__*/React.createElement(Typography, {\n    variant: 'h3',\n    style: {\n      color: '#2fe7b2',\n      position: 'absolute',\n      top: 7,\n      left: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 45\n    }\n  }, \"Like\") : null, latestIndex === index && direction === 'left' ? /*#__PURE__*/React.createElement(Typography, {\n    variant: 'h3',\n    style: {\n      color: red[500],\n      position: 'absolute',\n      top: 7,\n      right: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 45\n    }\n  }, \"Nope\") : null, /*#__PURE__*/React.createElement(CardActionArea, {\n    style: {\n      position: 'absolute',\n      bottom: 0,\n      padding: 15,\n      height: 'auto',\n      boxShadow: \" inset 0px 0px 0px 60px rgba(0,0,0,0.2)\",\n      width: '100%',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: 'h5',\n    style: {\n      color: 'white',\n      zIndex: 1000,\n      marginBottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 41\n    }\n  }, `${users.name} ${users.age}`), users.utility !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'transparent'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'transparent',\n      display: 'flex',\n      color: 'white',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      marginBottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 57\n    }\n  }, users.utility.school !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(School, {\n    size: 'small',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 77\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      marginLeft: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 77\n    }\n  }, users.utility.school)) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 70\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 57\n    }\n  }, users.passions.map(passion => /*#__PURE__*/React.createElement(Chip, {\n    style: {\n      backgroundColor: 'rgba(0,0,0,0.5)',\n      color: 'white',\n      marginRight: 5\n    },\n    label: passion.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 69\n    }\n  })))) : null)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: 'medium',\n    color: 'primary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: rewind,\n    className: classes.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    size: 'medium',\n    color: 'primary',\n    onClick: () => swipe('left'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: nope,\n    className: classes.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    size: 'medium',\n    color: 'primary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: star,\n    className: classes.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => swipe('right'),\n    size: 'medium',\n    color: 'primary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: love,\n    className: classes.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default PostCard;","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/users/widgets/PostCard.js"],"names":["Avatar","Backdrop","Card","CardActionArea","CardActions","CardMedia","Chip","Icon","IconButton","Typography","Clear","FastRewind","FlipToBackSharp","Forward","Room","School","Star","React","useState","useMemo","FavoriteBorderIcon","withStyles","postCardStyle","TinderCard","rewind","nope","star","super_like","axios","love","red","API_URL","makeStyles","NoPeersIsFound","useStyles","theme","buttons","display","flexDirection","justifyContent","marginTop","breakpoints","down","maxWidth","icons","width","height","alredyRemoved","dataHolder","charactersState","PostCard","props","classes","characters","setCharacters","post","users","lastDirection","setLastDirection","latestIndex","setLatestIndex","direction","setDirection","total","setTotal","childRefs","Array","length","fill","map","i","createRef","swiped","nameToDelete","console","log","push","outOfFrame","name","filter","character","swipe","dir","cardsLeft","person","includes","toBeRemoved","index","indexOf","saveLike","setTimeout","current","user","formData","FormData","append","id","then","response","data","status","fetchNewData","get","res","overflow","alignItems","position","profile_pic_path","color","top","left","right","bottom","padding","boxShadow","backgroundSize","backgroundPosition","zIndex","marginBottom","age","utility","backgroundColor","school","marginLeft","passions","passion","marginRight"],"mappings":"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","sourcesContent":["import { Avatar, Backdrop, Card, CardActionArea, CardActions, CardMedia, Chip, Icon, IconButton, Typography } from '@material-ui/core'\r\nimport { Clear, FastRewind, FlipToBackSharp, Forward, Room, School, Star } from '@material-ui/icons';\r\nimport React,{ useState, useMemo } from 'react'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport postCardStyle from '../styles/postCardStyle'\r\nimport TinderCard from 'react-tinder-card';\r\nimport rewind from '../../../assets/rewind.png'\r\nimport nope from '../../../assets/nope.png'\r\nimport star from '../../../assets/star.png'\r\nimport super_like from '../../../assets/super_like.png'\r\nimport axios from 'axios'\r\nimport love from '../../../assets/love.png'\r\nimport { red } from '@material-ui/core/colors';\r\nimport { API_URL } from '../../../constants/constants';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport NoPeersIsFound from './NoPeersIsFound';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttons:{\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'center',\r\n        marginTop:15,\r\n        [theme.breakpoints.down('xs')]:{\r\n            display:'flex',\r\n            flexDirection:'row',\r\n            justifyContent:'center',\r\n            maxWidth:500,\r\n            marginTop:0\r\n        }\r\n    },\r\n    icons:{\r\n        width:70,\r\n        height:70,\r\n        [theme.breakpoints.down('xs')]:{\r\n            width:60,\r\n            height:60\r\n        }\r\n    }\r\n  }));\r\nconst alredyRemoved = []\r\nconst dataHolder=[];\r\nlet charactersState = ''\r\n\r\n  function PostCard(props){  \r\n    const classes = useStyles();\r\n    charactersState = props\r\n    const [characters, setCharacters] = useState(props.post.users)\r\n  const [lastDirection, setLastDirection] = useState()\r\n  const [latestIndex,setLatestIndex] = useState()\r\n  const [direction,setDirection] = useState()\r\n  const [total,setTotal] = useState(0)\r\n\r\n  const childRefs = useMemo(() => Array(props.post.users.length).fill(0).map(i => React.createRef()), [])\r\n\r\n  const swiped = (direction, nameToDelete) => {\r\n    console.log('removing: ' + nameToDelete)\r\n    setLastDirection(direction)\r\n    alredyRemoved.push(nameToDelete)\r\n   \r\n  }\r\n\r\n  const outOfFrame = (name) => {\r\n    console.log(name + ' left the screen!')\r\n    charactersState = charactersState.filter(character => character.name !== name)\r\n    setCharacters(charactersState)\r\n  }\r\n\r\n  const swipe = (dir) => {\r\n    const cardsLeft = props.post.users.filter(person => !alredyRemoved.includes(person.name))\r\n    if (cardsLeft.length) {\r\n      const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\r\n      const index = props.post.users.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\r\n      console.log(props.post.users)\r\n      setLatestIndex(index)\r\n      setDirection(dir)\r\n      saveLike(dir,props.post.users[index],props)\r\n      alredyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\r\n      setTimeout(()=>{\r\n        childRefs[index].current.swipe(dir) // Swipe the card!\r\n        setTotal(total+1)\r\n      },500)\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  const saveLike = (dir,user,props)=>{\r\n      dataHolder.push(props.post)\r\n      if(dir==='right'){\r\n        const formData = new FormData();\r\n        formData.append('user_id',user.id);\r\n       axios.post(`${API_URL}matches`,formData)\r\n       .then(response=>response.data)\r\n       .then(response=>{\r\n           if(response.status){\r\n               fetchNewData(props)\r\n           }\r\n       })\r\n      }\r\n  }\r\n\r\n  const fetchNewData = (props)=>{\r\n      dataHolder.push(props.post)\r\n      console.log(`Data: ${dataHolder.length}`)\r\n      axios.get(`${API_URL}posts/single`)\r\n      .then(response=>response.data)\r\n      .then(res=>{\r\n          props.post[dataHolder.length-1] = res.data\r\n      })\r\n  }\r\n\r\n        return (\r\n           <div style={{width:'90%',overflow:'hidden',display:'flex',flexDirection:'row',justifyContent:'center'}}>\r\n            \r\n            {\r\n                total===props.post.users.length\r\n                ?\r\n                    (\r\n                        <NoPeersIsFound/>\r\n                    )\r\n                :\r\n                    (\r\n                        <div style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n               \r\n                <div style={{width: 400,maxWidth: 400,height: 500}}>\r\n                {\r\n                    props.post.users.map((users,index)=>(\r\n                        <TinderCard\r\n                        key={index}\r\n                        style={{position: 'absolute'}}\r\n                        ref={childRefs[index]}>\r\n                        <Card style={{position:'absolute'}}>\r\n                            <CardMedia \r\n                                style={{width:400,height:500}}\r\n                                image={users.profile_pic_path} \r\n                                >\r\n                                {\r\n                                    latestIndex===index&&direction==='right'\r\n                                    ?\r\n                                        (\r\n                                            <Typography \r\n                                            variant={'h3'}\r\n                                            style={{color:'#2fe7b2',position:'absolute',top:7,left:10}}>\r\n                                                Like\r\n                                            </Typography>\r\n                                        )\r\n                                    :\r\n                                        (null)\r\n                                }\r\n\r\n                                {\r\n                                    latestIndex===index&&direction==='left'\r\n                                    ?\r\n                                        (\r\n                                            <Typography \r\n                                            variant={'h3'}\r\n                                            style={{color:red[500],position:'absolute',top:7,right:10}}>\r\n                                                Nope\r\n                                            </Typography>\r\n                                        )\r\n                                    :\r\n                                        (null)\r\n                                }\r\n                                <CardActionArea style={{\r\n                                position:'absolute',\r\n                                bottom:0,\r\n                                padding:15,\r\n                                height:'auto',\r\n                                boxShadow:\" inset 0px 0px 0px 60px rgba(0,0,0,0.2)\",\r\n                                width:'100%',\r\n                                backgroundSize: 'cover',\r\n                                backgroundPosition: 'center'}}>\r\n                                        <Typography variant={'h5'} style={{color:'white',zIndex:1000,marginBottom:5}}>\r\n                                            {`${users.name} ${users.age}`}\r\n                                        </Typography >\r\n                                        {\r\n                                            users.utility!==null\r\n                                            ?\r\n                                                (\r\n                                                    <div style={{backgroundColor:'transparent'}}>\r\n                                                        <div style={{backgroundColor:'transparent',display:'flex',color:'white',flexDirection:'row',justifyContent:'flex-start',marginBottom:5}}>\r\n                                                            {\r\n                                                                users.utility.school!==null\r\n                                                                ?\r\n                                                                    (\r\n                                                                        <div style={{display:'flex',flexDirection:'row'}}>\r\n                                                                            <School size={'small'}/>\r\n                                                                            <Typography style={{marginLeft:5}}>\r\n                                                                                {users.utility.school}\r\n                                                                            </Typography>\r\n                                                                        </div>\r\n                                                                    )\r\n                                                                :\r\n                                                                    (<span></span>)\r\n                                                            }\r\n                                                            \r\n                                                        </div>\r\n                                                        <div style={{display:'flex',flexDirection:'row',justifyContent:'flex-start'}}>\r\n                                                            {\r\n                                                                users.passions.map(passion=>(\r\n                                                                    <Chip\r\n                                                                     style={{backgroundColor:'rgba(0,0,0,0.5)',color:'white',marginRight:5}}\r\n                                                                     label={passion.name}\r\n\r\n                                                                    />\r\n                                                                ))\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            :\r\n                                                (null)\r\n                                        }\r\n                                </CardActionArea>\r\n                            </CardMedia>\r\n                        </Card>\r\n                        </TinderCard>\r\n                    ))\r\n                }\r\n                </div>\r\n                \r\n                <div className={classes.buttons}>\r\n                     <IconButton \r\n                     size={'medium'} \r\n                     color={'primary'}>\r\n                        <Avatar\r\n                        src={rewind}\r\n                        className={classes.icons}\r\n                        />\r\n                    </IconButton>\r\n\r\n                    <IconButton size={'medium'} color={'primary'} onClick={() => swipe('left')}>\r\n                        <Avatar\r\n                        src={nope}\r\n                        className={classes.icons}\r\n                        />\r\n                    </IconButton>\r\n\r\n                    <IconButton size={'medium'} color={'primary'}>\r\n                        <Avatar\r\n                        src={star}\r\n                        className={classes.icons}\r\n                        />\r\n                    </IconButton>\r\n\r\n                    <IconButton \r\n                    onClick={() => swipe('right')}\r\n                    size={'medium'}\r\n                    color={'primary'}>\r\n                        <Avatar\r\n                        src={love}\r\n                        className={classes.icons}\r\n                        />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n                    )\r\n            }\r\n\r\n           </div>\r\n        )\r\n  }\r\n\r\n\r\nexport default PostCard"]},"metadata":{},"sourceType":"module"}