{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\users\\\\widgets\\\\AddMedia.js\";\nimport React from 'react';\nimport { me } from '../../state/actions/usersActions';\nimport { connect } from 'react-redux';\nimport { Button, Card, CardActions, CardMedia, Grid, IconButton, Typography } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { grey } from '@material-ui/core/colors';\nimport { uploadFile } from '../../../home/state/actions/FileUploadAction';\nimport { uploadMedia } from '../state/actions/AddMediaAction';\nimport { Close } from '@material-ui/icons';\n\nclass AddMedia extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onFileUpload = () => {\n      this.inputOpenFileRef.current.click();\n    };\n\n    this.onFileChange = event => {\n      // Update the state \n      const file = event.target.files[0];\n      const formData = new FormData();\n      formData.append('file', file);\n      this.setState({\n        uploading: true\n      });\n      this.props.uploadMedia(formData);\n    };\n\n    this.removeIndex = media => {\n      const index = this.props.medias.indexOf(media);\n      this.props.medias.splice(index, 1);\n    };\n\n    this.state = {\n      medias: [],\n      uploading: false\n    };\n    this.inputOpenFileRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.me();\n    const {\n      medias\n    } = this.state;\n    medias.push(this.props.user.attribute.profile_pic_path);\n    this.setState(medias);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.response.path !== '') {\n      const responses = {\n        media_path: nextProps.response.path\n      };\n      this.props.medias.push(responses);\n      this.setState({\n        uploading: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(Skeleton, {\n      variant: 'rect',\n      width: 400,\n      height: 200,\n      style: {\n        backgroundColor: grey[500]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginBottom: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, this.props.medias.map(media => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 4,\n      xs: 4,\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      style: {\n        width: '100%',\n        height: 150\n      },\n      image: media.media_path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(CardActions, {\n      style: {\n        padding: 0,\n        display: \"flex\",\n        flexDirection: 'row',\n        justifyContent: 'flex-end'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: 'primary',\n      onClick: () => this.removeIndex(media),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Close, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 61\n      }\n    }))))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: 'column',\n        alignItems: \"center\",\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        display: \"none\"\n      },\n      onChange: this.onFileChange,\n      type: \"file\",\n      ref: this.inputOpenFileRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    }), this.state.uploading ? /*#__PURE__*/React.createElement(Typography, {\n      color: 'primary',\n      variant: 'h4',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 49\n      }\n    }, \"Uploading...\") : /*#__PURE__*/React.createElement(Button, {\n      variant: 'contained',\n      color: 'primary',\n      onClick: this.onFileUpload,\n      size: 'medium',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 49\n      }\n    }, \"Add new media\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.userData.user,\n  loading: state.userData.loading,\n  response: state.authReducer.usersReducer.addMediaReducer.response\n});\n\nexport default connect(mapStateToProps, {\n  me,\n  uploadMedia\n})(AddMedia);","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/users/widgets/AddMedia.js"],"names":["React","me","connect","Button","Card","CardActions","CardMedia","Grid","IconButton","Typography","Skeleton","grey","uploadFile","uploadMedia","Close","AddMedia","Component","constructor","props","onFileUpload","inputOpenFileRef","current","click","onFileChange","event","file","target","files","formData","FormData","append","setState","uploading","removeIndex","media","index","medias","indexOf","splice","state","createRef","componentDidMount","push","user","attribute","profile_pic_path","componentWillReceiveProps","nextProps","nextContext","response","path","responses","media_path","render","loading","backgroundColor","display","flexDirection","marginBottom","map","padding","width","height","justifyContent","alignItems","marginTop","mapStateToProps","userData","authReducer","usersReducer","addMediaReducer"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {me} from '../../state/actions/usersActions'\r\nimport {connect} from 'react-redux'\r\nimport { Button, Card, CardActions, CardMedia, Grid, IconButton, Typography } from '@material-ui/core'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport { grey } from '@material-ui/core/colors'\r\nimport {uploadFile} from '../../../home/state/actions/FileUploadAction'\r\nimport {uploadMedia} from '../state/actions/AddMediaAction'\r\nimport { Close } from '@material-ui/icons'\r\nclass AddMedia extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            medias:[],\r\n            uploading:false\r\n        }\r\n        this.inputOpenFileRef = React.createRef()\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        this.props.me()\r\n        const {medias} = this.state\r\n        medias.push(this.props.user.attribute.profile_pic_path);\r\n        this.setState(medias)\r\n    }\r\n\r\n    onFileUpload = () => { \r\n        this.inputOpenFileRef.current.click()\r\n      }\r\n\r\n   onFileChange = event => { \r\n     \r\n        // Update the state \r\n        const file = event.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('file', file);\r\n        this.setState({uploading:true})\r\n        this.props.uploadMedia(formData)\r\n        \r\n      }\r\n\r\n      componentWillReceiveProps(nextProps, nextContext) {\r\n        if(nextProps.response.path!==''){\r\n\r\n            const responses = {\r\n                media_path:nextProps.response.path\r\n            }\r\n            this.props.medias.push(responses)\r\n            this.setState({\r\n                uploading:false,\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeIndex = media=>{\r\n        const index = this.props.medias.indexOf(media);\r\n        this.props.medias.splice(index,1)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.loading\r\n                    ?\r\n                        (\r\n                            <Skeleton\r\n                            variant={'rect'}\r\n                            width={400}\r\n                            height={200}\r\n                            style={{backgroundColor:grey[500]}}/>\r\n                        )\r\n                    :\r\n                        (\r\n                            <div style={{display:'flex',flexDirection:'column',marginBottom:30}}>\r\n                                \r\n                                <Grid container spacing={2}>\r\n                                    {\r\n                                        this.props.medias\r\n                                        .map(media=>(\r\n                                            <Grid item md={4} xs={4} sm={4}>\r\n                                                <Card style={{padding:0}}>\r\n                                                    <CardMedia\r\n                                                    style={{width:'100%',height:150}}\r\n                                                     image={media.media_path}\r\n                                                    >\r\n\r\n                                                    </CardMedia>\r\n                                                    <CardActions style={{padding:0,display:\"flex\",flexDirection:'row',justifyContent:'flex-end'}}>\r\n                                                        <IconButton color={'primary'} onClick={()=>this.removeIndex(media)}>\r\n                                                            <Close/>\r\n                                                        </IconButton>\r\n                                                    </CardActions>\r\n                                                </Card>\r\n                                            </Grid>\r\n                                        ))\r\n                                    }\r\n                                </Grid>\r\n                                <div style={{display:\"flex\",flexDirection:'column',\r\n                                alignItems:\"center\",marginTop:20}}>\r\n                                    <input \r\n                                    style={{display:\"none\"}}\r\n                                    onChange={this.onFileChange}\r\n                                    type=\"file\" \r\n                                    ref={this.inputOpenFileRef}/> \r\n\r\n                                    {\r\n                                        this.state.uploading\r\n                                        ?\r\n                                            (\r\n                                                <Typography color={'primary'} variant={'h4'}>\r\n                                                    Uploading...\r\n                                                </Typography>\r\n                                            )\r\n                                        :\r\n                                            (\r\n                                                <Button \r\n                                                variant={'contained'} \r\n                                                color={'primary'} \r\n                                                onClick={this.onFileUpload}\r\n                                                size={'medium'}>\r\n                                                    Add new media\r\n                                                </Button>\r\n                                            )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    user:state.userData.user,\r\n    loading:state.userData.loading,\r\n    response:state.authReducer.usersReducer.addMediaReducer.response\r\n})\r\n\r\nexport default connect(mapStateToProps,{me,uploadMedia})(AddMedia)"]},"metadata":{},"sourceType":"module"}