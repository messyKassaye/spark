{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\users\\\\dialogs\\\\OptionComponent.js\";\nimport { Button, Chip, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { indexPassion, storePassion } from '../state/actions/PassionAction';\nimport { connect } from 'react-redux';\nimport { Skeleton } from '@material-ui/lab';\nimport { grey } from '@material-ui/core/colors';\n\nclass OptionComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePassion = passion => {\n      const {\n        selectedPassion\n      } = this.state;\n      selectedPassion.push(passion);\n      const {\n        formData\n      } = this.state;\n      formData['passions'].push(passion);\n      this.setState({\n        formData,\n        selectedPassion,\n        showButton: true\n      });\n    };\n\n    this.addMyPassion = () => {\n      const {\n        formData\n      } = this.state;\n      this.props.storePassion(formData);\n    };\n\n    this.state = {\n      selectedPassion: [],\n      formData: {\n        passions: []\n      },\n      showButton: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.indexPassion();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: 'textSecondary',\n      style: {\n        marginBottom: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }\n    }, \"Select passions that you'd like to share with the people you connect with. Choose a minimum of 3\"), this.props.loading ? /*#__PURE__*/React.createElement(Skeleton, {\n      variant: 'rect',\n      width: \"100%\",\n      height: 50,\n      style: {\n        backgroundColor: grey[500]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, this.props.passions.map(passion => /*#__PURE__*/React.createElement(Chip, {\n      color: this.state.selectedPassion.indexOf(passion.id) > -1 ? 'primary' : 'inherit',\n      onClick: () => this.handlePassion(passion.id),\n      label: passion.name,\n      variant: \"outlined\",\n      style: {\n        margin: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 41\n      }\n    }))), this.state.showButton ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 25,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.addMyPassion,\n      color: 'primary',\n      variant: 'contained',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 49\n      }\n    }, \"Add my passion\")) : null));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  passions: state.authReducer.usersReducer.passionReducer.passions,\n  loading: state.authReducer.usersReducer.passionReducer.loading\n});\n\nexport default connect(mapStateToProps, {\n  indexPassion,\n  storePassion\n})(OptionComponent);","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/users/dialogs/OptionComponent.js"],"names":["Button","Chip","Typography","React","indexPassion","storePassion","connect","Skeleton","grey","OptionComponent","Component","constructor","props","handlePassion","passion","selectedPassion","state","push","formData","setState","showButton","addMyPassion","passions","componentDidMount","render","display","flexDirection","alignItems","marginBottom","loading","backgroundColor","map","indexOf","id","name","margin","marginTop","mapStateToProps","authReducer","usersReducer","passionReducer"],"mappings":"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","sourcesContent":["import { Button, Chip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {indexPassion,storePassion} from '../state/actions/PassionAction'\r\nimport {connect} from 'react-redux'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport { grey } from '@material-ui/core/colors'\r\nclass OptionComponent extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            selectedPassion:[],\r\n            formData:{\r\n                passions:[]\r\n            },\r\n            showButton:false\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        this.props.indexPassion()\r\n    }\r\n\r\n    handlePassion =(passion)=>{\r\n        const {selectedPassion} = this.state\r\n        selectedPassion.push(passion)\r\n\r\n        const {formData} = this.state\r\n        formData['passions'].push(passion)\r\n        this.setState({\r\n            formData,\r\n            selectedPassion,\r\n            showButton:true\r\n        })\r\n    }\r\n\r\n    addMyPassion = ()=>{\r\n        const {formData} = this.state\r\n        this.props.storePassion(formData)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{display:'flex',flexDirection:'column',alignItems:'flex-start'}}>\r\n               <Typography color={'textSecondary'} style={{marginBottom:15}}>\r\n                   Select passions that you'd like to share with the people you connect with. \r\n                   Choose a minimum of 3\r\n               </Typography>\r\n                {\r\n                    this.props.loading\r\n                    ?\r\n                        (\r\n                            <Skeleton\r\n                             variant={'rect'}\r\n                             width=\"100%\"\r\n                             height={50}\r\n                             style={{backgroundColor:grey[500]}}\r\n                            />\r\n                        )\r\n                    :\r\n                        (\r\n                            <div style={{display:'flex',flexDirection:'column'}}>\r\n                                <div>\r\n                                {\r\n                                    this.props.passions.map(passion=>(\r\n                                        <Chip \r\n                                        color={this.state.selectedPassion.indexOf(passion.id)>-1?'primary':'inherit'}\r\n                                        onClick={()=>this.handlePassion(passion.id)}\r\n                                        label={passion.name}\r\n                                        variant=\"outlined\"\r\n                                        style={{margin:5}} />\r\n                                    ))\r\n                                }\r\n                                </div>\r\n\r\n                                {\r\n                                    this.state.showButton\r\n                                    ?\r\n                                        (\r\n                                            <div style={{marginTop:25,display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                                                <Button\r\n                                                onClick={this.addMyPassion}\r\n                                                color={'primary'}\r\n                                                variant={'contained'}>\r\n                                                    Add my passion\r\n                                                </Button>\r\n                                            </div>\r\n                                        )\r\n                                    :\r\n                                        (null)\r\n                                }\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n passions:state.authReducer.usersReducer.passionReducer.passions,\r\n loading:state.authReducer.usersReducer.passionReducer.loading\r\n})\r\n\r\nexport default connect(mapStateToProps,{indexPassion,storePassion})(OptionComponent)"]},"metadata":{},"sourceType":"module"}