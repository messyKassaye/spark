{"ast":null,"code":"import jwt from 'jsonwebtoken';\nimport jwt_decode from 'jwt-decode';\nconst TOKEN = 'token';\nexport const set = token_data => {\n  localStorage.setItem(TOKEN, token_data);\n};\nexport const get = () => {\n  return localStorage.getItem(TOKEN);\n};\nexport const setRefreshToken = token => {\n  localStorage.setItem('referesh_token', token);\n};\nexport const getRefreshToken = () => {\n  localStorage.getItem('referesh_token');\n};\nexport const removeToken = () => {\n  localStorage.removeItem('token');\n};\nexport const logout = () => {\n  if (localStorage.clear()) {\n    return true;\n  }\n\n  return false;\n};\nexport const setRole = role => {\n  localStorage.setItem('role', role);\n};\nexport const isAuthenticated = () => {\n  if (localStorage.getItem('token')) {\n    return true;\n  }\n\n  return false;\n};\nexport const setData = data => {\n  localStorage.setItem(\"data\", JSON.stringify(data));\n};\nexport const getData = () => {\n  return JSON.parse(localStorage.getItem(\"data\"));\n};\nexport const getRole = () => {\n  return localStorage.getItem('role');\n};\nexport const isExpired = () => {\n  const decodedToken = jwt_decode(get());\n  const dateNow = new Date();\n\n  if (decodedToken.exp * 1000 < dateNow.getTime()) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport const advertProfile = (id, clicked) => {\n  localStorage.setItem(id, clicked);\n};\nexport const getAdvertProfile = id => {\n  localStorage.getItem(id);\n};","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/TokenService.js"],"names":["jwt","jwt_decode","TOKEN","set","token_data","localStorage","setItem","get","getItem","setRefreshToken","token","getRefreshToken","removeToken","removeItem","logout","clear","setRole","role","isAuthenticated","setData","data","JSON","stringify","getData","parse","getRole","isExpired","decodedToken","dateNow","Date","exp","getTime","advertProfile","id","clicked","getAdvertProfile"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,MAAMC,KAAK,GAAE,OAAb;AAGA,OAAO,MAAMC,GAAG,GAAIC,UAAD,IAAc;AAC7BC,EAAAA,YAAY,CAACC,OAAb,CAAqBJ,KAArB,EAA2BE,UAA3B;AACH,CAFM;AAIP,OAAO,MAAMG,GAAG,GAAG,MAAM;AACrB,SAAOF,YAAY,CAACG,OAAb,CAAqBN,KAArB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMO,eAAe,GAAIC,KAAD,IAAS;AACpCL,EAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAsCI,KAAtC;AACH,CAFM;AAIP,OAAO,MAAMC,eAAe,GAAG,MAAI;AAC/BN,EAAAA,YAAY,CAACG,OAAb,CAAqB,gBAArB;AACH,CAFM;AAIP,OAAO,MAAMI,WAAW,GAAG,MAAI;AAC3BP,EAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AACH,CAFM;AAIP,OAAO,MAAMC,MAAM,GAAG,MAAI;AACtB,MAAGT,YAAY,CAACU,KAAb,EAAH,EAAwB;AACpB,WAAO,IAAP;AACH;;AACD,SAAQ,KAAR;AACH,CALM;AAOP,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAQ;AAC3BZ,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BW,IAA5B;AACH,CAFM;AAIP,OAAQ,MAAMC,eAAe,GAAG,MAAI;AAChC,MAAGb,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAH,EAAiC;AAC7B,WAAO,IAAP;AACH;;AACD,SAAQ,KAAR;AACH,CALO;AAOR,OAAO,MAAMW,OAAO,GAAGC,IAAD,IAAQ;AAC1Bf,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4Be,IAAI,CAACC,SAAL,CAAeF,IAAf,CAA5B;AACH,CAFM;AAIP,OAAO,MAAMG,OAAO,GAAG,MAAI;AACvB,SAAOF,IAAI,CAACG,KAAL,CAAWnB,YAAY,CAACG,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH,CAFM;AAGP,OAAO,MAAMiB,OAAO,GAAG,MAAI;AACvB,SAAOpB,YAAY,CAACG,OAAb,CAAqB,MAArB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMkB,SAAS,GAAG,MAAI;AACzB,QAAMC,YAAY,GAAC1B,UAAU,CAACM,GAAG,EAAJ,CAA7B;AACA,QAAMqB,OAAO,GAAG,IAAIC,IAAJ,EAAhB;;AACA,MAAGF,YAAY,CAACG,GAAb,GAAiB,IAAjB,GAAwBF,OAAO,CAACG,OAAR,EAA3B,EAA6C;AACzC,WAAO,IAAP;AACH,GAFD,MAEM;AACF,WAAQ,KAAR;AACH;AACJ,CARM;AAUP,OAAO,MAAMC,aAAa,GAAG,CAACC,EAAD,EAAIC,OAAJ,KAAc;AACvC7B,EAAAA,YAAY,CAACC,OAAb,CAAqB2B,EAArB,EAAwBC,OAAxB;AACH,CAFM;AAIP,OAAO,MAAMC,gBAAgB,GAAIF,EAAD,IAAM;AAClC5B,EAAAA,YAAY,CAACG,OAAb,CAAqByB,EAArB;AACH,CAFM","sourcesContent":["import jwt from 'jsonwebtoken'\r\nimport jwt_decode from 'jwt-decode'\r\nconst TOKEN ='token'\r\n\r\n\r\nexport const set = (token_data)=>{\r\n    localStorage.setItem(TOKEN,token_data)\r\n}\r\n\r\nexport const get = () => {\r\n    return localStorage.getItem(TOKEN)\r\n}\r\n\r\nexport const setRefreshToken = (token)=>{\r\n    localStorage.setItem('referesh_token',token)\r\n}\r\n\r\nexport const getRefreshToken = ()=>{\r\n    localStorage.getItem('referesh_token')\r\n}\r\n\r\nexport const removeToken = ()=>{\r\n    localStorage.removeItem('token')\r\n}\r\n\r\nexport const logout = ()=>{\r\n    if(localStorage.clear()){\r\n        return true\r\n    }\r\n    return  false\r\n}\r\n\r\nexport const setRole = (role)=>{\r\n    localStorage.setItem('role',role)\r\n}\r\n\r\nexport  const isAuthenticated = ()=>{\r\n    if(localStorage.getItem('token')){\r\n        return true\r\n    }\r\n    return  false\r\n}\r\n\r\nexport const setData =(data)=>{\r\n    localStorage.setItem(\"data\",JSON.stringify(data));\r\n}\r\n\r\nexport const getData = ()=>{\r\n    return JSON.parse(localStorage.getItem(\"data\"));\r\n}\r\nexport const getRole = ()=>{\r\n    return localStorage.getItem('role')\r\n}\r\n\r\nexport const isExpired = ()=>{\r\n    const decodedToken=jwt_decode(get())\r\n    const dateNow = new Date();\r\n    if(decodedToken.exp*1000 < dateNow.getTime()){\r\n        return true\r\n    }else {\r\n        return  false\r\n    }\r\n}\r\n\r\nexport const advertProfile = (id,clicked)=>{\r\n    localStorage.setItem(id,clicked);\r\n}\r\n\r\nexport const getAdvertProfile = (id)=>{\r\n    localStorage.getItem(id);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}