{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\users\\\\widgets\\\\ChatRoom.js\";\nimport { AppBar, Avatar, Card, CardActions, CardContent, CardHeader, CssBaseline, Divider, Grid, Hidden, IconButton, Input, SwipeableDrawer, Toolbar, Typography } from '@material-ui/core';\nimport { Close, Send } from '@material-ui/icons';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { me } from '../../state/actions/usersActions';\nimport Pusher from 'pusher-js';\nimport DrawerProfile from './DrawerProfile';\nimport theme from \"../../../themes/app_theme\";\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport authStyle from '../styles/auth_style';\nimport ChatUsersList from './ChatUsersList';\nimport ChatProfile from './ChatProfile';\nimport { showUser } from '../../state/actions/usersActions';\nimport HorizontalLoading from '../loader/HorizontalLoading';\nimport { Link } from 'react-router-dom';\nimport Chats from './Chats';\nimport { showChats } from '../state/actions/ChatAction';\n\nclass ChatRoom extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrawerToggle = (value, page) => event => {\n      if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      this.setState({\n        mobileOpen: value,\n        currentPage: page\n      });\n    };\n\n    this.checkInfo = () => {};\n\n    this.state = {\n      mobileOpen: false,\n      currentPage: 'Dashboard'\n    };\n  }\n\n  componentDidMount() {\n    this.props.me();\n    let id = this.props.match.params.id;\n    this.props.showUser(id);\n  }\n  /*componentDidUpdate(){\r\n      let id = this.props.match.params.id\r\n      this.props.showUser(id)\r\n  }*/\n\n\n  render() {\n    const {\n      container\n    } = this.props;\n    const {\n      classes\n    } = this.props;\n    const drawer = /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.drawerRoot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      style: {\n        position: \"relative\"\n      },\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      style: {\n        padding: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DrawerProfile, {\n      showBack: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(ChatUsersList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"nav\", {\n      className: classes.drawer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      smUp: true,\n      implementation: \"css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SwipeableDrawer, {\n      container: container,\n      variant: \"temporary\",\n      anchor: theme.direction === 'rtl' ? 'right' : 'left',\n      open: this.state.mobileOpen,\n      onOpen: this.handleDrawerToggle(true, this.state.currentPage),\n      onClose: this.handleDrawerToggle(false, this.state.currentPage),\n      classes: {\n        paper: classes.drawerPaper\n      },\n      ModalProps: {\n        keepMounted: true // Better open performance on mobile.\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, drawer)), /*#__PURE__*/React.createElement(Hidden, {\n      xsDown: true,\n      implementation: \"css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SwipeableDrawer, {\n      classes: {\n        paper: classes.drawerPaper\n      },\n      variant: \"permanent\",\n      open: this.state.mobileOpen,\n      onOpen: this.handleDrawerToggle(true, this.state.currentPage),\n      onClose: this.handleDrawerToggle(false, this.state.currentPage),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, drawer))), /*#__PURE__*/React.createElement(\"main\", {\n      style: {\n        flexGrow: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '100vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, this.props.chatLoading ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 9,\n      xs: 12,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(HorizontalLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 44\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(HorizontalLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 41\n      }\n    }))) : /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 8,\n      xs: 12,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        height: '100vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      title: /*#__PURE__*/React.createElement(Typography, {\n        variant: 'h6',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 53\n        }\n      }, `Your are matched with ${this.props.chatUser.attribute.name}`),\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: this.props.chatUser.attribute.profile_pic_path,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 53\n        }\n      }),\n      action: /*#__PURE__*/React.createElement(IconButton, {\n        component: Link,\n        to: '/auth',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Close, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 57\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 48\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 48\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Chats, {\n      user: this.props.user,\n      chatUser: this.props.chatUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 50\n      }\n    })), /*#__PURE__*/React.createElement(CardActions, {\n      style: {\n        width: '100%',\n        top: '75%',\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: 'Write your message...',\n      style: {\n        width: '90%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Send, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 65\n      }\n    })))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ChatProfile, {\n      user: this.props.chatUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 41\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.userData.user,\n  loading: state.userData.loading,\n  chatUser: state.userData.chatUser,\n  chatLoading: state.userData.chatLoading,\n  chats: state.authReducer.usersReducer.chatReducer.prevChats,\n  chatsLoading: state.authReducer.usersReducer.chatReducer.loading\n});\n\nexport default withStyles(authStyle)(connect(mapStateToProps, {\n  me,\n  showUser,\n  showChats\n})(ChatRoom));","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/users/widgets/ChatRoom.js"],"names":["AppBar","Avatar","Card","CardActions","CardContent","CardHeader","CssBaseline","Divider","Grid","Hidden","IconButton","Input","SwipeableDrawer","Toolbar","Typography","Close","Send","React","connect","me","Pusher","DrawerProfile","theme","withStyles","authStyle","ChatUsersList","ChatProfile","showUser","HorizontalLoading","Link","Chats","showChats","ChatRoom","Component","constructor","props","handleDrawerToggle","value","page","event","type","key","setState","mobileOpen","currentPage","checkInfo","state","componentDidMount","id","match","params","render","container","classes","drawer","drawerRoot","position","padding","root","direction","paper","drawerPaper","keepMounted","flexGrow","height","chatLoading","chatUser","attribute","name","profile_pic_path","user","width","top","display","flexDirection","mapStateToProps","userData","loading","chats","authReducer","usersReducer","chatReducer","prevChats","chatsLoading"],"mappings":"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","sourcesContent":["import { AppBar, Avatar, Card, CardActions, CardContent, CardHeader, CssBaseline, Divider, Grid, Hidden, IconButton, Input, SwipeableDrawer, Toolbar, Typography } from '@material-ui/core'\r\nimport { Close, Send } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {me} from '../../state/actions/usersActions'\r\nimport Pusher from 'pusher-js'\r\nimport DrawerProfile from './DrawerProfile'\r\nimport theme from \"../../../themes/app_theme\";\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport authStyle from '../styles/auth_style'\r\nimport ChatUsersList from './ChatUsersList'\r\nimport ChatProfile from './ChatProfile'\r\nimport {showUser} from '../../state/actions/usersActions'\r\nimport HorizontalLoading from '../loader/HorizontalLoading'\r\nimport { Link } from 'react-router-dom'\r\nimport Chats from './Chats'\r\nimport {showChats} from '../state/actions/ChatAction'\r\nclass ChatRoom extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            mobileOpen: false,\r\n            currentPage:'Dashboard'\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        this.props.me()\r\n        let id = this.props.match.params.id\r\n        this.props.showUser(id)\r\n    }\r\n\r\n    \r\n\r\n    /*componentDidUpdate(){\r\n        let id = this.props.match.params.id\r\n        this.props.showUser(id)\r\n    }*/\r\n\r\n    handleDrawerToggle = (value,page) => event=>{\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            mobileOpen: value,\r\n            currentPage:page\r\n        })\r\n    }\r\n\r\n    checkInfo = ()=>{\r\n       \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {container} = this.props;\r\n        const {classes} = this.props;\r\n        const drawer = (\r\n            <div className={classes.drawerRoot}>\r\n                <AppBar style={{position: \"relative\"}} color={'primary'}>\r\n                    <Toolbar style={{padding: 5}}>\r\n                        <DrawerProfile showBack={true}/>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <ChatUsersList/>\r\n            </div>\r\n        )\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline/>\r\n                <nav className={classes.drawer}>\r\n                    {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                    <Hidden smUp implementation=\"css\">\r\n                        <SwipeableDrawer\r\n                            container={container}\r\n                            variant=\"temporary\"\r\n                            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                            open={this.state.mobileOpen}\r\n\r\n                            onOpen={this.handleDrawerToggle(true,this.state.currentPage)}\r\n                            onClose={this.handleDrawerToggle(false,this.state.currentPage)}\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                            ModalProps={{\r\n                                keepMounted: true, // Better open performance on mobile.\r\n                            }}\r\n                        >\r\n                            {drawer}\r\n                        </SwipeableDrawer>\r\n                    </Hidden>\r\n                    <Hidden xsDown implementation=\"css\">\r\n                        <SwipeableDrawer\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                            variant=\"permanent\"\r\n                            open={this.state.mobileOpen}\r\n                            onOpen={this.handleDrawerToggle(true,this.state.currentPage)}\r\n                            onClose={this.handleDrawerToggle(false,this.state.currentPage)}\r\n                        >\r\n                            {drawer}\r\n                        </SwipeableDrawer>\r\n                    </Hidden>\r\n                </nav>\r\n                <main style={{flexGrow:1}}>\r\n                    <div style={{height:'100vh'}}>\r\n                    {\r\n                        this.props.chatLoading\r\n                        ?\r\n                            (\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item md={9} xs={12} sm={12}>\r\n                                           <HorizontalLoading/>\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={3}>\r\n                                        <HorizontalLoading/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        :\r\n                            (\r\n                                <Grid container>\r\n                                    <Grid item md={8} xs={12} sm={12}>\r\n                                           <Card style={{height:'100vh'}}>\r\n                                               <CardHeader\r\n                                                title={\r\n                                                    <Typography variant={'h6'}>\r\n                                                        {`Your are matched with ${this.props.chatUser.attribute.name}`}\r\n                                                    </Typography>\r\n                                                }\r\n                                                avatar={\r\n                                                    <Avatar src={this.props.chatUser.attribute.profile_pic_path}/>\r\n                                                }\r\n                                                action={\r\n                                                    <IconButton component={Link} to={'/auth'}>\r\n                                                        <Close/>\r\n                                                    </IconButton>\r\n                                                }\r\n                                               />\r\n                                               <Divider/>\r\n                                               <CardContent>\r\n                                                 <Chats user={this.props.user} chatUser={this.props.chatUser}/>\r\n                                               </CardContent>\r\n                                               <CardActions style={{width:'100%',top:'75%',position:'relative'}}>\r\n                                                        <div style={{display:'flex',flexDirection:'row',width:'100%'}}>\r\n                                                            <Input\r\n                                                             placeholder={'Write your message...'}\r\n                                                             style={{width:'90%'}}\r\n                                                            />\r\n                                                            <IconButton color={'primary'}>\r\n                                                                <Send/>\r\n                                                            </IconButton>\r\n                                                       </div>\r\n                                               </CardActions>\r\n                                           </Card>\r\n                                    </Grid>\r\n\r\n                                    <Grid item md={4}>\r\n                                        <ChatProfile user={this.props.chatUser}/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                    }\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state=>({\r\n    user:state.userData.user,\r\n    loading:state.userData.loading,\r\n    chatUser:state.userData.chatUser,\r\n    chatLoading:state.userData.chatLoading,\r\n    chats:state.authReducer.usersReducer.chatReducer.prevChats,\r\n    chatsLoading:state.authReducer.usersReducer.chatReducer.loading\r\n})\r\n\r\nexport default withStyles(authStyle)(connect(mapStateToProps,{me,showUser,showChats})(ChatRoom))"]},"metadata":{},"sourceType":"module"}