{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\context\\\\AppProvider.js\";\nimport React from \"react\";\nimport Authenticated from \"../authentication/Authenticated\";\nimport { get } from \"../TokenService\";\nimport t from 'prop-types';\nimport AuthenticationContext from \"./AuthenticationContext\";\n\nclass AppProvider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.go = value => {\n      this.setState({\n        navigate: value\n      });\n    };\n\n    this.show = (show, messages) => {\n      this.setState({\n        show: {\n          isShown: show\n        }\n      });\n    };\n\n    if (get()) {\n      this.state = {\n        navigate: 'Authenticated',\n        show: {\n          isShown: true,\n          message: ''\n        }\n      };\n    } else {\n      this.state = {\n        navigate: 'Home',\n        show: {\n          isShown: true,\n          message: ''\n        }\n      };\n    }\n  }\n\n  render() {\n    const contextValues = {\n      navigate: this.state.navigate,\n      go: this.go\n    };\n    return /*#__PURE__*/React.createElement(AuthenticationContext.Provider, {\n      value: contextValues,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nAppProvider.propTypes = {\n  children: t.node.isRequired\n};\nexport default AppProvider;","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/context/AppProvider.js"],"names":["React","Authenticated","get","t","AuthenticationContext","AppProvider","Component","constructor","props","go","value","setState","navigate","show","messages","isShown","state","message","render","contextValues","children","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAOC,CAAP,MAAc,YAAd;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AAKtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAsBlBC,EAtBkB,GAsBZC,KAAD,IAAW;AACZ,WAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF;AAAZ,OAAd;AACH,KAxBiB;;AAAA,SAyBlBG,IAzBkB,GAyBX,CAACA,IAAD,EAAMC,QAAN,KAAiB;AACpB,WAAKH,QAAL,CAAc;AACVE,QAAAA,IAAI,EAAC;AACDE,UAAAA,OAAO,EAACF;AADP;AADK,OAAd;AAKH,KA/BiB;;AAEd,QAAGX,GAAG,EAAN,EAAS;AACL,WAAKc,KAAL,GAAa;AACTJ,QAAAA,QAAQ,EAAC,eADA;AAETC,QAAAA,IAAI,EAAC;AACDE,UAAAA,OAAO,EAAE,IADR;AAEDE,UAAAA,OAAO,EAAE;AAFR;AAFI,OAAb;AAOH,KARD,MAQM;AACF,WAAKD,KAAL,GAAW;AACPJ,QAAAA,QAAQ,EAAC,MADF;AAEPC,QAAAA,IAAI,EAAC;AACDE,UAAAA,OAAO,EAAE,IADR;AAEDE,UAAAA,OAAO,EAAE;AAFR;AAFE,OAAX;AAOH;AACJ;;AAcDC,EAAAA,MAAM,GAAG;AAEL,UAAMC,aAAa,GAAG;AAClBP,MAAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWJ,QADH;AAElBH,MAAAA,EAAE,EAAE,KAAKA;AAFS,KAAtB;AAKA,wBACI,oBAAC,qBAAD,CAAuB,QAAvB;AAAgC,MAAA,KAAK,EAAEU,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKX,KAAL,CAAWY,QADhB,CADJ;AAKH;;AAlDqC;;AAApCf,W,CACKgB,S,GAAY;AACfD,EAAAA,QAAQ,EAAEjB,CAAC,CAACmB,IAAF,CAAOC;AADF,C;AAoDvB,eAAelB,WAAf","sourcesContent":["import React from \"react\";\r\nimport Authenticated from \"../authentication/Authenticated\";\r\nimport {get} from \"../TokenService\";\r\nimport t from 'prop-types';\r\nimport AuthenticationContext from \"./AuthenticationContext\";\r\n\r\nclass AppProvider extends React.Component {\r\n    static propTypes = {\r\n        children: t.node.isRequired,\r\n    };\r\n\r\n    constructor(props){\r\n        super(props)\r\n        if(get()){\r\n            this.state = {\r\n                navigate:'Authenticated',\r\n                show:{\r\n                    isShown: true,\r\n                    message: ''\r\n                }\r\n            }\r\n        }else {\r\n            this.state={\r\n                navigate:'Home',\r\n                show:{\r\n                    isShown: true,\r\n                    message: ''\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    go = (value) => {\r\n        this.setState({ navigate: value });\r\n    }\r\n    show = (show,messages)=>{\r\n        this.setState({\r\n            show:{\r\n                isShown:show\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const contextValues = {\r\n            navigate: this.state.navigate,\r\n            go: this.go,\r\n        };\r\n\r\n        return (\r\n            <AuthenticationContext.Provider value={contextValues}>\r\n                {this.props.children}\r\n            </AuthenticationContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppProvider;\r\n"]},"metadata":{},"sourceType":"module"}