{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\spark\\\\spark_front\\\\src\\\\authentication\\\\users\\\\dialogs\\\\EditInfo.js\";\nimport { TextField, Typography } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\nimport { Skeleton } from '@material-ui/lab';\nimport React from 'react';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport { connect } from 'react-redux';\nimport LoadingButton from '../../commons/LoadingButton';\nimport { me } from '../../state/actions/usersActions';\nimport { storeUtitlity } from '../../state/actions/userUtilityAction';\nimport { showMainDialog } from '../../commons/state/actions/dialogActions';\nimport AddMedia from '../widgets/AddMedia';\nimport { indexMedia } from '../state/actions/AddMediaAction';\n\nclass EditInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        formData\n      } = this.state;\n      formData[event.target.name] = event.target.value;\n      this.setState(formData);\n    };\n\n    this.handleSubmit = event => {\n      this.setState({\n        submitted: true,\n        loading: true\n      });\n      const {\n        formData\n      } = this.state;\n      this.props.storeUtitlity(formData);\n    };\n\n    this.state = {\n      formData: {\n        about: '',\n        job_title: '',\n        company: '',\n        school: ''\n      },\n      submitted: false,\n      loading: false,\n      finished: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.me();\n    this.props.indexMedia();\n    const {\n      formData\n    } = this.state;\n    const utility = this.props.user.relations.utilities;\n\n    if (utility !== null) {\n      formData['about'] = this.props.user.relations.utilities.about;\n      formData['company'] = utility.company;\n      formData['job_title'] = utility.job_title;\n      formData['school'] = utility.school;\n      this.setState(formData);\n    }\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.response.status) {\n      this.setState({\n        loading: false,\n        finished: false,\n        submitted: false\n      });\n      setTimeout(() => {\n        this.props.showMainDialog({\n          'show': false,\n          'page': null,\n          'title': '',\n          actions: {\n            on: false,\n            path: '',\n            id: ''\n          }\n        });\n      }, 2000);\n    }\n  }\n\n  render() {\n    const {\n      formData\n    } = this.state;\n    const {\n      loading\n    } = this.state;\n    const {\n      finished\n    } = this.state;\n    const setLoading = !finished && loading;\n    const isEnabled = formData.about.length > 0 && formData.job_title.length > 0 && formData.company.length > 0 && formData.school.length > 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 'auto',\n        overflowY: 'scroll'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, this.props.loading && this.props.mediaLoading ? /*#__PURE__*/React.createElement(Skeleton, {\n      variant: 'rect',\n      width: '100%',\n      height: 150,\n      style: {\n        backgroundColor: grey[500]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflowY: 'scroll',\n        height: 800\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AddMedia, {\n      medias: this.props.medias,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(ValidatorForm, {\n      onSubmit: this.handleSubmit,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, this.props.response.message), /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        marginBottom: 25\n      },\n      variant: 'outlined',\n      label: 'About me',\n      onChange: this.handleChange,\n      name: \"about\",\n      value: this.state.formData.about,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        marginBottom: 25\n      },\n      variant: 'outlined',\n      label: 'Job title',\n      onChange: this.handleChange,\n      name: \"job_title\",\n      value: this.state.formData.job_title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        marginBottom: 25\n      },\n      variant: 'outlined',\n      label: 'Company',\n      onChange: this.handleChange,\n      name: \"company\",\n      value: this.state.formData.company,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      variant: 'outlined',\n      label: 'School',\n      onChange: this.handleChange,\n      name: \"school\",\n      value: this.state.formData.school,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(LoadingButton, {\n      style: {\n        marginTop: 50,\n        padding: 10\n      },\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      disabled: !isEnabled || this.state.submitted,\n      loading: setLoading,\n      text: 'Edit info',\n      done: finished,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, 'Edit info'))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.userData.user,\n  loading: state.userData.loading,\n  response: state.authReducer.utilityReducer.response,\n  medias: state.authReducer.usersReducer.addMediaReducer.medias,\n  mediaLoading: state.authReducer.usersReducer.addMediaReducer.loading\n});\n\nexport default connect(mapStateToProps, {\n  me,\n  storeUtitlity,\n  showMainDialog,\n  indexMedia\n})(EditInfo);","map":{"version":3,"sources":["D:/projects/spark/spark_front/src/authentication/users/dialogs/EditInfo.js"],"names":["TextField","Typography","grey","Skeleton","React","ValidatorForm","connect","LoadingButton","me","storeUtitlity","showMainDialog","AddMedia","indexMedia","EditInfo","Component","constructor","props","handleChange","event","formData","state","target","name","value","setState","handleSubmit","submitted","loading","about","job_title","company","school","finished","componentDidMount","utility","user","relations","utilities","componentWillReceiveProps","nextProps","nextContext","response","status","setTimeout","actions","on","path","id","render","setLoading","isEnabled","length","height","overflowY","mediaLoading","backgroundColor","display","flexDirection","medias","padding","message","marginBottom","marginTop","mapStateToProps","userData","authReducer","utilityReducer","usersReducer","addMediaReducer"],"mappings":"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","sourcesContent":["import { TextField, Typography } from '@material-ui/core'\r\nimport { grey } from '@material-ui/core/colors'\r\nimport { Skeleton } from '@material-ui/lab'\r\nimport React from 'react'\r\nimport { ValidatorForm } from 'react-material-ui-form-validator'\r\nimport {connect} from 'react-redux'\r\nimport LoadingButton from '../../commons/LoadingButton'\r\nimport {me} from '../../state/actions/usersActions'\r\nimport {storeUtitlity} from '../../state/actions/userUtilityAction'\r\nimport {showMainDialog} from '../../commons/state/actions/dialogActions'\r\nimport AddMedia from '../widgets/AddMedia'\r\nimport {indexMedia} from '../state/actions/AddMediaAction'\r\nclass EditInfo extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formData:{\r\n                about:'',\r\n                job_title:'',\r\n                company:'',\r\n                school:''\r\n            },\r\n            submitted: false,\r\n            loading: false,\r\n            finished: false,\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.props.me()\r\n        this.props.indexMedia()\r\n\r\n\r\n            const {formData} = this.state\r\n            const utility = this.props.user.relations.utilities\r\n            if(utility!==null){\r\n                formData['about'] = this.props.user.relations.utilities.about\r\n                formData['company'] = utility.company\r\n                formData['job_title'] = utility.job_title\r\n                formData['school'] = utility.school\r\n                this.setState(formData)\r\n            }\r\n    }\r\n    \r\n\r\n    handleChange = (event)=>{\r\n        const {formData} = this.state\r\n        formData[event.target.name] = event.target.value\r\n        this.setState(formData)\r\n    }\r\n\r\n    handleSubmit = (event)=>{\r\n        this.setState({\r\n            submitted: true,\r\n            loading: true\r\n        })\r\n\r\n        const {formData} = this.state\r\n        this.props.storeUtitlity(formData)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if (nextProps.response.status) {\r\n            this.setState({\r\n                loading: false,\r\n                finished: false,\r\n                submitted: false,\r\n            })\r\n          setTimeout(()=>{\r\n              this.props.showMainDialog({'show':false,'page':null,'title':'',actions:{on:false,path:'',id:''}})\r\n          },2000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        \r\n        const {formData} = this.state\r\n        const {loading} = this.state;\r\n        const {finished} = this.state\r\n        const setLoading = !finished && loading;\r\n        const isEnabled = formData.about.length > 0 && formData.job_title.length > 0\r\n            &&formData.company.length>0&&formData.school.length>0\r\n        return (\r\n            <div style={{height:'auto',overflowY:'scroll'}}>\r\n                {\r\n                    this.props.loading&&this.props.mediaLoading\r\n                    ?\r\n                        (\r\n                            <Skeleton\r\n                             variant={'rect'}\r\n                             width={'100%'}\r\n                             height={150}\r\n                             style={{backgroundColor:grey[500]}}\r\n                            />\r\n                        )\r\n                    :\r\n                        (\r\n                            <div style={{display:'flex',flexDirection:'column',overflowY:'scroll',height:800}}>\r\n                                \r\n                            <AddMedia medias={this.props.medias}/>\r\n                            <ValidatorForm \r\n                            onSubmit={this.handleSubmit}\r\n                            style={{display:'flex',flexDirection:'column',padding:10}}>\r\n                                <Typography color={'primary'}>\r\n                                    {this.props.response.message}\r\n                                </Typography>\r\n                                \r\n                                <TextField\r\n                                 style={{marginBottom:25}}\r\n                                 variant={'outlined'}\r\n                                 label={'About me'}\r\n                                 onChange={this.handleChange}\r\n                                 name=\"about\"\r\n                                 value={this.state.formData.about}\r\n                                />\r\n\r\n                                <TextField\r\n                                 style={{marginBottom:25}}\r\n                                 variant={'outlined'}\r\n                                 label={'Job title'}\r\n                                 onChange={this.handleChange}\r\n                                 name=\"job_title\"\r\n                                 value={this.state.formData.job_title}\r\n                                />\r\n\r\n                                <TextField\r\n                                 style={{marginBottom:25}}\r\n                                 variant={'outlined'}\r\n                                 label={'Company'}\r\n                                 onChange={this.handleChange}\r\n                                 name=\"company\"\r\n                                 value={this.state.formData.company}\r\n                                />\r\n                                <TextField\r\n                                 variant={'outlined'}\r\n                                 label={'School'}\r\n                                 onChange={this.handleChange}\r\n                                 name=\"school\"\r\n                                 value={this.state.formData.school}\r\n                                />\r\n\r\n                                <LoadingButton\r\n                                style={{marginTop:50,padding:10}}\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                disabled={!isEnabled || this.state.submitted}\r\n                                loading={setLoading}\r\n                                text={'Edit info'}\r\n                                done={finished}\r\n                                >\r\n                                {\r\n                                    'Edit info'\r\n                                }\r\n                                </LoadingButton>\r\n\r\n                            </ValidatorForm>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    user:state.userData.user,\r\n    loading:state.userData.loading,\r\n    response:state.authReducer.utilityReducer.response,\r\n    medias:state.authReducer.usersReducer.addMediaReducer.medias,\r\n    mediaLoading:state.authReducer.usersReducer.addMediaReducer.loading\r\n})\r\n\r\nexport default connect(mapStateToProps,{me,storeUtitlity,showMainDialog,indexMedia})(EditInfo)"]},"metadata":{},"sourceType":"module"}